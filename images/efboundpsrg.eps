%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Acrobat Distiller, Job 3)
%%Version: 1 2
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20030613181943)
%%For: (leboudec)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 152 58 772 351
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

152 58 moveto
772 58 lineto
772 351 lineto
152 351 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset spots
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Predefined (named) spot functions for PDF
21 dict dup begin
/CosineDot
{ 180 mul cos exch 180 mul cos add 2 div } bd
/Cross
{ abs exch abs 2 copy gt { exch } if pop neg } bd
/Diamond
{ abs exch abs 2 copy add .75 le
{ dup mul exch dup mul add 1 exch sub }
{ 2 copy add 1.23 le
{ .85 mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse }
ifelse } bd
/Double
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd
/DoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add } bd
/Ellipse
{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt
{ pop dup mul exch .75 div dup mul add 4 div
1 exch sub }
{ dup 1 gt
{pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub }
{ .5 exch sub exch pop exch pop }
ifelse }
ifelse } bd
/EllipseA
{ dup mul .9 mul exch dup mul add 1 exch sub } bd
/EllipseB
{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd
/EllipseC
{ dup mul exch dup mul .9 mul add 1 exch sub } bd
/InvertedDouble
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedDoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedEllipseA
{ dup mul .9 mul exch dup mul add 1 sub } bd
/InvertedEllipseC
{ dup mul exch dup mul .9 mul add 1 sub } bd
/InvertedSimpleDot
{ dup mul exch dup mul add 1 sub } bd
/Line
{ exch pop abs neg } bd
/LineX
{ pop } bd
/LineY
{ exch pop } bd
/Rhomboid
{ abs exch abs 0.9 mul add 2 div } bd
/Round
{ abs exch abs 2 copy add 1 le
{ dup mul exch dup mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse } bd
/SimpleDot
{ dup mul exch dup mul add 1 exch sub } bd
/Square
{ abs exch abs 2 copy lt { exch } if pop neg } bd
end
{ /Function defineRes pop } forall
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%BeginResource: font CEEIMF+ComicSansMS
11 dict begin
/FontName /CEEIMF+ComicSansMS def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/g0 39 RD 
caf8880df80b16f9b407fc0b06fdb407f80b0609fbccf97515f78d06fd36
07fb8d06f93607090e ND 
/g3 5 RD 
8bf7bf0d0e ND 
/g17 65 RD 
d1f78d0df27015979691998b9c088b9d85997f970880957d927a8b08798b
7d857f7f088080857d8b7a088b79917d977f0896809a859c8b089b8b9a91
969708090e ND 
/g18 103 RD 
b4f8940de07b15e3f75805f6f75e05b3dbaad0a1c708c2f719058e958d94
8b93088b9686958293088394808f7f8b08748d6b5160fb090873455a2645
fb180845fb175b2672450888858a868b86088b7d90829483089383968797
8b089d8a9895949e088b06090e ND 
/g19 130 RD 
a9f8f60df870e615b9d4a2f7018bf726088be576d862ca085bd548af358b
08318b42625639085f4474398b2d088bfb059c31ae4508b832d45dee8b08
e78bd1b0b9d4080945f89015a65f99498b33088b3781467654086d3c5a64
468b08508b60a66ec1086fc07cdc8bf6088bcc9ac6a9be08adcabca9c78b
08c28bb475a75f08090e ND 
/g20 203 RD 
d8f8560df7c1981594948f968b99088b9887968294088195808f7d8b0858
8a058b9c8aa189a60886a78ba28b9e088bae8fc393d40892d58fc28bb008
8b968b9b8aa10889a18b9b8b96088b928c978d9a088c988c978b9208a580
97751e728b6f7d6f6e086b6f72787a7f086f737d798b7c088b7f907f9581
0893839785988b08978ba79cb6ad088b60884c8438088437874c8b62088b
7c8c748e6c088e6d8c748b7b08778c05748c05578a727b8b6a088b78937f
9c850894889b8aa28b08eb06ed0698899790949408090e ND 
/g21 252 RD 
dbf8f60df851991594958f968b98088b9f7c9b6e96087594748f728b086d
8b5a894687082682058ac09db8afb0089fa1b3a7c8b108c5b0b5aba3a808
9ea399a494a70896a88fa98bac088bbe74b45dab0861a85c99568b08628b
62806475086e7a6a72656708807f847e8b7c08709c7ead1e928b97919996
08d1c205a69ba894a98b08a18ba384a37c08a57b99788b76088b627d666f
6c087b796c725c6b083a525764787608625d764e8b3f088b708d778f8008
92749a81a18b088e8b908a928a08938a908a8f8b08968b9f8da48e08a38e
9e8d988b089c8aa48dac8d08ac8ba48d9c8b08928b97899a860899859789
938b08988b9690949508090e ND 
/g23 143 RD 
a2f8f60df89cf76b15a492979a8ba308a96d9c4f1e838c848a858b088df8
2a0589ab7a9b668b08698b707c756d08fb85fbf305615905797382798b7c
088b7a9a7fa986089b88aa8ab88b08f76c8605fb03078c868a848a80088b
818a828b85088c5d9c73ae8b08a89a9aa91ff74907b08aa38c968e088c8a
0509fb3cea15fb609005bcd0cff3e2f71f08fbd107090e ND 
/g24 300 RD 
c9f8f60df83cc515bec4a5d38be3088bd47bc86bbb0865c254a7438b0842
8c4f795e680898e891c28b9a08dd8d05de8c058e8c948a9a8a089c8c978a
958b08d88ab29e8baf088b98869681940882947f907e8b08868b828a7f89
088087828a858b08818c7e8b798c08798b7d8c828b087a8a6e8b658a0865
896f8b788b08848a818c7e8c087e8d818b848b086a7981771f8c858e8191
7d088e7e8f7e8b80088c6a85488024088558896e8b84088b7e9080948208
94819687988b089a8a9a93999a08c0c5059d9d9d989d9308a093a890ae8b
08b58caa789f66089c6c92658b5c088b51795a67620867605c76538b0865
8a6f9376990882917e987aa0087e9a7f927e8b087d8a8087818208818186
808b7e088b848e81918208b645cf69e88b08e38cd1a8c0c6088c8c05090e
 ND 
/g32 152 RD 
bbf8920db4f87a1570857d7d8b74088b7e8f8193830893819588988b0892
8a968c9a8c089a8b968c928b08f77906a78a9a9a8ba808a87d996e1efb79
06668d73898489088c070991fb9c156f887d7c8b7008709a7ba91e948c9a
8b9f8c089d8d9a8b958b08a18cab8ab68a08b68aab8ba08b08a98a999a8b
a808a87d996e1e758c6b8b608c08608c6b8b768b08718c6e896788088c07
090e ND 
/g37 252 RD 
e8f90a0df844d915b6b0a0b18bb2088ba97fa673a40872a767a15aa008cc
baaccd8bdf088bcd6cc24eb80857b3539e518b08548b58845f7d08818786
80897b08874e895f8b6d088c638747852e08843489498b5d08fb22078b7c
917e987e08977d9885998b08f7078be899d4a808ad98a99ea9a5088b0609
fb19f8b915ae719c6e8b6c088b5f7a65696e086d70627c5a8708878b738d
5d8f0892f751058ee105978aa58eaf8b08b28baf7ead700809b1fc1315b5
77a07a8b7c088b82817e777a08777a757c7482085578467e36880889f005
8daa8bb08db4089f889e8a9d8b088e8b928b948c08948b928c8f8b08bd83
05ab82a881aa7c088c07090e ND 
/g38 191 RD 
b7f8ef0df8a8f8cb1592958f978b98088bb288ab86a50886aa7d99758b08
768b7d83807a08828e7f8e7e8c08808c7c8c7b8b083c8b3e5b3e2a082efb
085dfb058bfb02088b46a150b85908ba57c471ce8b08e38be2b1e1d70896
9692988b9a088b98869782960881947f917d8b08838b7c84797d08646f6e
777881086a7c69826a8b0863896a9c6faa0871a97daf8bb5088be3b2e7d9
ec08c4d2bfb0ba8b08a88b9b899287089288947e94760895729b7fa08b08
9b8b98919498088a06090e ND 
/g48 245 RD 
c2fa070df99b7015969590978b99088b9485a77fb80872df056ff573f711
78f7270883c585b2869e087cbf76a76f8b08748b7a7f7e7308837a837485
6e087b440569fb1d60fb165bfb110868f71070f7087af6087ae57ec67ea8
0882a37a97768b08798b7a827e78087b747c5c7d43086efb2e0556fb5905
743d80488b55088b7b8f80938108958097859b8b08a28b9b9895a40898c6
94b88ea908c8f796059ee205a3fb15a9fb10acfb07089855059274917a92
7d0897789a809e8b08a28b9e9799a40896a298a997b008a7e805eef7bb05
a7fb46a1fb079857089c370594669371957b08967a9a819d8b08978b9890
959408090e ND 
/g53 257 RD 
c4f9080df8a39515959590978b99088b95879783950858c840c426c108c0
9cb8a2afaa08b9afa1b88bbc088bf149e0fb18d1086e9a65965f9108fb0b
9405778e79837f7a08807b867c8b78088b7b8d728e6a088d6c8d728b7a08
8b6d885f845008844f885f8b6d088b718c658e58088e588c658b71088b7c
907f94810894839785998b08998c978f949508949590978b990889eb0588
eb05f71766f70b43f6210896819686978b08998a969095960809fb59f8cc
15be64a5618b5e088b7d827c7a79087c7b7a7e79810862744d80398b0885
8c848b818b08848b838b868b0894ec058fb38dab8ba5088b998a9f89a308
86c605d38505bf87bc76ba67088b06090e ND 
/g55 225 RD 
c4f93c0df917f90c15949590978b99088b98869882950881937f917d8b08
738a658d5a8f085a8e668d728b08778c6e8a638a08638a6d8a788b08778d
708c6a8f086590708e808c087a8b7f868180088481867f8b7e088b71987b
a58408b582c285d28b08b9068a64904993300892368f4a8b5c088a7b8c73
8d6b088f6b8b738b7b088b868a838981088a848a828b86088b7d907f9582
0897829686988b089e8c999594a108939a8e9e8ba1088b988a9c89a20888
a28a9c8b96088cc187d384e90883f187d48ab808ae06a48ab08abc8708bc
88b089a38b089b8a9690949508090e ND 
/g56 138 RD 
d7f9750df8eef8b6158b988b9f8ba6088ba78a9f8b98088db87aa16a8b08
798b7d81827708857d87798b77088b838b7f8b77088c788b7b8b7f088afb
e14bfb3afb168b08fb1e46eef7591ff7b307c17ca76d1e758b7c7f837308
89808776896d0889708a668b5d088bfb108d39906208962ea446b35c08be
52d66df08b08f757edf751f80d1f8a06090e ND 
/g68 225 RD 
a4f8940df85c7815949390968b9808889305869787938991087ab681a888
990884a389ab8bb3088bb78cb08da7088da78da08e970893918e938b9408
8aa575a15f9d08689a6b926f8b083f8b4b6f555308545370488b3c088b38
9b4dac6308af5fc276d78b089b8b9f8fa39408a293a798aa9c089281967f
9a7e089b7c9684918b08988b958f94940809fb09f7181575797b7f7f8508
767e70866c8b08648b6f9878a60879a681b38bc1088bc09dbbb0b408b0b4
b7a0be8b088e8b938a948808938796879785088778897a897b0889798a7c
8b7d088b61904a9535088c8a05090e ND 
/g69 234 RD 
d6f8e50df824c415babfa3ca8bd5088cd576c962be085fbf52a7458b0876
8b72867281087283707c6f7808f710078df6058b8f8c928d94088b938d92
8b90088aa67f9a728b087a8b7b81807708837c87798b77088b748b5d8b49
088a498b5e8b73088b688c578d46088c488c578b68088c828a7f8a7a088b
7a8a7e8b83088b7f8f8094820893829687978b089b8b9793959b08b476b8
82bd8b08d28bc6a5bcbf080955f7cb15a36b97628b5a088c5a7c616d6a08
6b6a657a5c8b08728b748e7791086f9775947b9208db078ad7058de005ab
a4a39b999308a699a793a68b08b78baf79a568088b06090e ND 
/g71 213 RD 
bdf8df0df87af96f15aa7c9b6e1e728b7c7d876e08855b862f87fb1d085b
ad0579966d91658b08418b50715d57085b5675468b34088b43a250b95d08
b65fc374ce8b08a88ba48fa49408a694a298a29c08966e997c9f8b08978b
968f949308939590958b98088b8e8b8f8a900881c186de8bf700088bba8d
bb8fbb0897f72f92ef8bb8088b0609fb36fbe115a07e9b7797710851078a
52058c3705878786858687087275797e80850878817486708b08628b689a
6da9086faa7baf8bb5088bcb99bca6ab08a7acb49bc28b08a68ba484a07e
08090e ND 
/g72 174 RD 
b5f8b80df8239615c5a5a8aa8baf088b97879582940881928190808b087e
8b7f82807a088179727d6580086b847186758b08678b6b92709908709874
a079a608f74fe305c0a3ae9d9b9708afa69ea88bac088bba76ad61a10869
9f5f93558b083f8b506c5e4d08635176458b36088b41a452bd6208b868c7
78d58b08b98bbc96bda1088b060962f8081572766172506e08fb2a440598
c99fb9a5aa08a6aaac9ab38b08bc8bb37ea771088b06090e ND 
/g75 242 RD 
d2f8d60df84c7a15959490968b98088a918b8f8a910884a686ae86b10882
f10586e8058ac482b57da40877af669c558b08688b6b826d79086c7a6f70
7067088ab6058baf8caf8dae088db08caf8bad088ba488a886ab0887a67b
9a708b087e8b7f87828208828186808b7d088b7c8d7b8e7c088d7d8d7b8b
7a088b7e8a6f89630889fbfb058a43058a638974888308898089848b8608
8b80907f95820895819787988b089f8b9995949f0894a290d48bf71008a9
c3a1af9c9e08acb0b09eb58b08a99b6c4e1f8a838b7e8a7a088b798a7f8b
83088c6b8e65915c088f5a936593700892729a7fa28b08998b978f949408
090e ND 
/g79 86 RD 
e0f7a60df702f8c5158ccd8cc68bbe08ac7b9b6b1e6b7b7b6a1f8b588a50
8949088a488a518b58088b628951873c08883b89508b6408699b7bab1ea8
8b9b9b8eac088ebd8cb18ba50892f787058bbc8cc78dce08090e ND 
/g85 119 RD 
cff8740df810f81e158bb384a97e9f087f9f7795718b083d8b466d4c4f08
8dc17aa66b8b086e7d7b6a1f8b808b7b8a76088a748b7c8b8008fbeb076b
997aa81eab9b9bac1f8af7a0059eb5a3aba8a008aba3b499bf910862078d
7a8b808b85086a997ba71ea98b9b9f8db4088c918b968b9c088b06090e ND 
/g86 231 RD 
9ff87b0df831f81a1594948f978b9a088b938999879d08879f89988b9408
8b9b87968294088195808f7d8b087c8b7c887e850878836c80607f08617f
6b807782084c706a5a8b47088b659870a579089f7ea980b68208be8005c9
7aaa6e8b5f088b767c7c6d820875847388708b087d8b788d758f08709079
918393087c9a7e93818b087d8b80868181088082877f8b7e08896aa572bd
7908b27cb384b68b08c68bbb96b1a108b9a6a2b38bc0088bcc70bc56ad08
67a4539d409808818d828e818f088ba7a5a6c0a008be9bb097a391089170
8e79908308927f98859d8b08978b9790959408090e ND 
/g92 141 RD 
89f89d0df88af860158b988696819508809480907e8b08798b7e82817908
7260735971510842fb3f054bf7234ff70254d80884987f907c8b087e8b80
868181088081877f8b7e088980907f947c08a16705f744fbe50543fb2f69
2d8b6a088b7e908095820895819787998b089e8b9b9793a308abea05a1c5
abd6b5e408f73df801058f958d938b92088b06090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/CEEIMF+ComicSansMS findfont /Encoding get
dup 0 /g0 put
dup 32 /g3 put
dup 46 /g17 put
dup 47 /g18 put
dup 48 /g19 put
dup 49 /g20 put
dup 50 /g21 put
dup 52 /g23 put
dup 53 /g24 put
dup 61 /g32 put
dup 66 /g37 put
dup 67 /g38 put
dup 77 /g48 put
dup 82 /g53 put
dup 84 /g55 put
dup 85 /g56 put
dup 97 /g68 put
dup 98 /g69 put
dup 100 /g71 put
dup 101 /g72 put
dup 104 /g75 put
dup 108 /g79 put
dup 114 /g85 put
dup 115 /g86 put
dup 121 /g92 put
pop
%%EndResource
[/N29/CEEIMF+ComicSansMS -1 TZ
%%BeginResource: font CEEHBL+ComicSansMS,Bold
11 dict begin
/FontName /CEEHBL+ComicSansMS,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/g0 40 RD 
caf8880df80a16f9b407fc0b06fdb407f80b0609fbccf97615f78e068afd
3705fb8d06f93707090e ND 
/g3 5 RD 
8bf8460d0e ND 
/g37 215 RD 
cbf90a0df866d915bab1a3b48bb6088bae7dad6fad0873ab6fa26b9a08a6
a29da296a00899a491ab8bb0088dd169c549b90852b2509f4e8b08528b62
8772840857856e78866c088a7b89758c72088d758b758c7508fc99078b78
937a9a7b089b7a9c839f8b08f7078beb99d7a708ae99ac9eaba5088a0609
fb31f89f15a8769a758b74088b4859672883087b8b758c6d8f088df20589
f205958aa38cb58b08ae8bab80a975088a0709b3fbe715af789d758c7208
8b786f7a527b084a774e81538808f74a07c689b78aa98b08a388a682a77b
088b06090e ND 
/g39 191 RD 
d1f9660df7306515aa84a688a38b08ee8bd79dc1ae08baaab1b5a7bf08a8
bc98c18bc3088bea63df3bd80846cd3aba2caa08828e6d9859a3085ea171
94808b08788b79827a7908787a83798b79088b678c558c43088c418c558b
67088b6c8a59884a08874b8a5a8b6a088b78927c987e08977f9c849e8b08
a07ca981b083088a0709f7dcf7da158b68826a7a6b087b6b74726e78086b
785981458b08768b798d7b8f087a8f7d917e9308f87807f360cf6cab7708
e850bb458b3a088c07090e ND 
/g42 211 RD 
9ef93c0df92af7ea158b9e849b7e98087e967a92778b08358b3c85498008
fb0a7850688b59088b7a917c977e08997b9c849f8b08948b968d959008c2
a4cd9ad7910878526d5f636d0866705f7c598b085a8b6a957aa0087d9e82
b08bc1088bf701afeed4e708bdc9b3aba88b08a68baa82ac7908ac78a182
958b089e8b9c929899089898929b8b9d088ba96ba84ba60853a261966b8b
08588b5a785e65084a545644623308633576358b38088b2ea147b65d08b6
5ecc74e28b08e68bdba8cfc608cec5b7d9a1ec08a098949e8ba3088a0709
0e ND 
/g51 191 RD 
a8f8a90df813f7e515cdbcaccd8bde088bcf6cc24db90853b64f9f4b8b08
708b738a788a0876897d898088085a8f74628b36088b5b883f8526088429
88408b5908fb1c078b78917d977f08987e9a859e8b089d8b9b9197970897
9891998b9c088bf58cd58cb908a188998a918b08da8bd2a1c6b6088a0609
3cf7a515ac759c728b6f088b6279686771086a73617f588b08868b808c7a
8e0890d88ec48caf088aa98ca38b9a08918b928c938b08928b958b958b08
b18bae81ab76088c06090e ND 
/g53 217 RD 
b8f9140df8bd98159999929b8b9d088b9a859a8098085fbd4abc35bb08c6
a2b7a6a8ac08a7ac9ab08bb6088bf346e1fb1fd1086a9c65955d91088a8c
628e3c91086d8c74817a7508807b84778b76088afc1e058c738a668b5a08
8a5b8b668b73088b78917b987e0898809b849e8b089f8a9b929898089798
929b8b9e088b9389c188ea08f70a66f7004bee2f089a7e9b849d8b089d8a
9c9298980809fb72f8b015b969a2688b67088b8284817d7d087e7e7c7f7a
8308647750813b8b08868b838b838b08f79707ae8a9e898e8b08bc85b979
b76b088c07090e ND 
/g54 215 RD 
a2f9490df88e9e15eab7bbcb8bdf088bce74c25db20861ae529f43910861
8d628d618d08749079907f93087f9385958b97088ba49ea1b29f08b29eb2
96b58b089a8ba288a98408ab84a1889a8b08a08b9b92989a089898909a8b
9c088ba36ea0519d085c9a64926b8b083a8b4271485608495569518a4c08
8a59a964c77008b777be81c38a08d387bc86a38208ab7f9d708b62088b6c
70705572085672557f538b084b8b619f79b3087ba9779a6e8b08758b7a84
7f7e087e7d857a8b77088b639f68b36c08ba66cc79de8b08e98bde9bd4ac
088b06090e ND 
/g68 214 RD 
a6f8c00df87d8115989692998b9c088b90859a7ea7087ea9839c8a8e0882
a787b78bc9088ba48ca38d9f088c9c8e9d8e980892928f968b97088ba672
a45aa008639c67946c8b083a8b466f51530851546e488b3d088b359f4db2
6108b261c676d98b089b8b9e8fa29208a292a596a99908ac6fa27c9a8b08
9d8b9a9198960809fb2cf71f157b7e7a8179840879847888778b086b8b74
967ba1087ca183ac8bb7088bb89cb4acae08acacb29db78b088e8b908a90
8a088f899189928808887a897c8a7d088a7e8a7f8b81088b649051943d08
8c07090e ND 
/g71 223 RD 
a3f8df0df7e1f896157890758e738b083b8b4b705a5508585673448b3408
8b40a44fbc5c08ba5cc874d48b08a38ba48da38f08a38fa294a198089676
9d80a38b089d8b9a919897089796929a8b9d088b8f8b908a900883b388d8
8bf708088bbc8fd192e90891eb8fd18bbb088b9c859b7f970881987b9178
8b08668b76788665088560863f87fb03087d957a9378900809b3fbf81586
868686868608747a7d818287087e857888728b08698b6d9871a40871a37e
aa8bae088bc397b5a3a708a3a5af9abb8b08a38ba0869c81089b819a7c96
770888218c508c7b088c07090e ND 
/g72 161 RD 
a2f8c30df8369215c1a3a6a98bb008ad7a9b691e7b8b7583707b086e7966
825f8b086e8b728f759308749479977b9c08f738d405c3a3af9e9d9808b3
a59fab8baf088bbf72b05aa308669d5c94528b083a8b4a6b5b4c085f5376
458b39088b40a652c26208bc65cb79d98b08bd8bbc95b99f088a070942f8
0215717b68795f7708667a667c667b089ab39ba9a19f08a0a1a594a98b08
af8ba785a17f088a07090e ND 
/g75 264 RD 
bef8d60df726f8b2158dac8cac8bab088bb588a8859e0880ae769c6b8b08
768b7c857e7f087e80847c8b78088b808d7d8e77088d778d7c8b81088b7f
8a718965088a7b0589fb2e8bfb008d4a08883a8a5f89840886808a828b85
088b7a927c997f08997d9b869d8b08a88b9f9898a60894a392d28bf70a08
a5b9a0ab9a9c08a8abac9caf8b089a8b93828e79088c878b7d8b73088b83
8b7f8a7b088a798b7f8b83088a6e8e65915d08925b9266937108956aa07b
ac8b089d8b9b919997089997929a8b9d088b908a9189920886a685ab86af
088a9688ab86bf0888b48ab389b30887bc80af79a20872aa639b538b086c
8b6e85707f086f8172797374088ba98cab8dab088b06090e ND 
/g76 184 RD 
cff7ac0df727f8f4159a99939c8b9f088ba0839c7c99087c997992768b08
778b79847c7d087a7d847a8b77088b76937a9a7d089a7d9d84a08b08a08b
9d929a99080984fba2158eb78daf8ba808899e869b7e97087e977b91778b
08788b7a857e7f08807e847c8b78088b6e8a67885f08875f8a678b6e088b
788c6d8c62088b638c6d8b78088b78917b987f08987f9b859f8b089e8b9c
919897089698929a8b9e088b9e8ba98ab40889b38ba98b9e088ba88daf8e
b708090e ND 
/g79 64 RD 
ccf7a60df71bf965158b9e859a7f97087d967c91788b08788b7b857e8008
7c80857b8b7808fd38078b78917b987f08987e9b859f8b08b7a2aac91ff9
1d07090e ND 
/g80 297 RD 
b4f99d0df71ff86f158b9b849a7d99087d9b7b91798b08728b7a7c7e6e08
827485718b6e088b7a8c748c6c088c698c748b7b08fb4a078b698e70927b
0895739d7fa78b089f8b9b90989408999593998b9d0889928c978c9a088c
9b8b978b94088bb08cbf8ccd088f8f8e8f8d8d08b0beb2afb1a1088d7f8e
7a8b76088a669054934308914390548b66088b78917b987f0898809b849f
8b089e8b9c919897089699929a8b9e088bad86c182d30883d186c18bb008
97959f98a69a08a59b9c92938b08998b966e9451088f6e905c914808934c
905c9169089267a178b08b089d8b9c919997089997919a8a9e087df70f7f
e382c00881d784b786980876ca5fab4b8b086f8b71877382087382757e77
790874b1669e598b085e8b5d6f5a52088ead8c998b84088c07090e ND 
/g81 257 RD 
acf89f0df8547a159897929a8b9d088ba588ab84b30884b488ac8ba4088a
908c968b9a08ae078bd083bf7bae0875bc60a64e8b08568b59735c5b0890
0787bf75a4608b08788b7b857e7f087d7f857c8b78088b818c7d8c77088b
778c7c8b81088b6c895e8752088653895e8b6b088b838c7c8d78088d7a8c
7c8b82088b77917c987f08977e9b859f8b089f8b9b919898089797929b8b
9e088b958c998d9e088d9d8c9a8b94088b998c9a8d9a088d9d8d9a8c9608
98c2a1b9a6af08a4ada79ea78b0897927d701f8b868b838a82088b818b86
8b890889818b7d8a76088b788a7c8b83088b6a8d6a9067088f6a8f698f69
089264a077b38b089e8b9b91989708090e ND 
/g82 125 RD 
9df8a20df834c715b3c19fcb8bd7088cd079c568ba0866bf57a54a8b0831
8b476a5a49086052784b8d43088e40a44fbb5e08b560c077c78b08d68bc8
a9b8c7088c8a050944f733158a657e6d737508777572836f8b08728b7793
799c0876a07fa98bb2088cb494af9faa08a2b0ab9db38b08c68ba7568722
088a06090e ND 
/g85 125 RD 
b4f8740df837f81515e26ab64a1e458b4b7551600884b1769d678b08768b
7c85807f08817e857c8b79088b818b7c8a77088a778b7c8b8108fbd4078b
78907d957f08977d9a859f8b089f8b9b919897089798929a8b9e0889f78a
05adc9bfb1d597085a078e609e76b48b08b58ba2a48ebd088a908c968b9c
088b06090e ND 
/g86 159 RD 
a4f87b0df834f852158ba980a07596087d94728f6a8b08388b4d84627e08
4674685f8b4a088b5ca264b96b089e7eb676ce6d08b977a2798b7a08706a
7e491e7b8b76906f94086d9476907c8b0864787b6b1f8b66a371bc7908af
7eb284b68b08ca8bbe97b5a208bfa7a5b68bc3088bb673b25cad08749a5f
a34aa9085ea0729c8b9808a0b396da1e988b998a98890891709e7eab8b08
ac9aa8c51f8c07090e ND 
/g87 201 RD 
97f86b0df843f830159897919a8b9e088baa7e9f7194087d8f728e668b08
7d8b7b8a7788088cb305dd73b35b1e788b7b857e7f087e7f847c8b79088b
7e8c7b8c76088c758c798b8108608d6f8e7f8b08778b7b857f7e087e7e85
7c8b79088b649f76b48708b587a9889f8a0890fb158e378b64088b7d8b7a
8a740889748b798b7f088b7b927c997f08997f9a869d8b08baa3b0d61f8b
938b948b97088a958b938b8f088bb688e086f718089d8c9a8d988b08938b
938b948b089389948c928b089e8a9b92989708090e ND 
/g88 217 RD 
a5f89c0df861f85b158c9d859a7d97087d977b91788b08638b7578866408
855a88518b48088c7d8b6f8c65088a698c6f8b72085f826385678b08848b
838c838d08858d828e838f0885a087a888ad0887ad8ab38bb9088b998da3
90a90890ab8da18b99088b9c849a7e97087d977b91788b08668b75798466
088255865b8b61088b4b9143983a089260a06baf7508aa76b282b98b08b9
8bb693b59a089573a07fa68b089e8b9b919897089996919a8b9d088b948a
948a99088b978a968b92088ba18bac8bb7088ab68bac8ba1088b818ec491
f710088c07090e ND 
/g89 129 RD 
96f87a0df827f79415c0f70aa5cc8b97088b9b849b7d97087d977b91798b
086f8b787e7e7108765e7e688272086c3f74537a660854f72668e778b208
7fa577986f8b08798b7b857d7f087b7e857c8b79088b848d818f8108d4fb
43c1fb17ae33089969a27aac8b089c8b9a90979508959793988d9b08a2be
aed5b6eb088a07090e ND 
/g90 220 RD 
9df9400df926f850158b9d849a7d97087d977b91798b08678b787d846f08
5bfb507128888108899a83b87ed80880c283b583ac0880bb73a2678b0866
8b72767e61086c286f3973490883c584b487a4088a9389a187b10887a788
a1879d0883ad759d688b08788b7b857d7f087e80847c8b79088b798d7590
6e08a0fb1c9b33956308955f9a669d6f089c6f9b7d9a8c08a68c9f9699a1
0895939296909908abe0a4ca9cb3088d8f8f95929908973a9653946d08a0
3eac63b48a08a68b9f969ba008a1a99ba995a808adf5adf707adf713088e
918b908b8e088b06090e ND 
/g92 158 RD 
8ef8bd0df8b1f850158b9d849a7d97087c987b91798b08728b787f7d7408
75667461745a08847b765d683e084df70e55e95dc9087f997a94758b087a
8b7a847d7e087d7e847c8b79088b7e8f7e947c08947d937f937f08d8fb1e
c523af440845fb2869318b6d088b78927c997f08997f9b859e8b08a88ba0
9a97aa089ab396a9929f089fc3acd2b5e008d6f731c4f709aed50892968d
968b94088b06090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/CEEHBL+ComicSansMS,Bold findfont /Encoding get
dup 0 /g0 put
dup 32 /g3 put
dup 66 /g37 put
dup 68 /g39 put
dup 71 /g42 put
dup 80 /g51 put
dup 82 /g53 put
dup 83 /g54 put
dup 97 /g68 put
dup 100 /g71 put
dup 101 /g72 put
dup 104 /g75 put
dup 105 /g76 put
dup 108 /g79 put
dup 109 /g80 put
dup 110 /g81 put
dup 111 /g82 put
dup 114 /g85 put
dup 115 /g86 put
dup 116 /g87 put
dup 117 /g88 put
dup 118 /g89 put
dup 119 /g90 put
dup 121 /g92 put
pop
%%EndResource
[/N23/CEEHBL+ComicSansMS,Bold -1 TZ
%%BeginResource: font CEEGGF+Arial
11 dict begin
/FontName /CEEGGF+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/g0 40 RD 
f711f9820df88816f90507fc8806fd0507f8880609fc78f8f515f86806fc
e507fc6806f8e507090e ND 
/g20 52 RD 
f701f8c00df79bf9631552067c6c716b666a08666b606f5a74083607a694
aa9bad9f08af9fa6a0a09f08fcc407e306f96207090e ND 
/g25 211 RD 
b1f8c00df820f9341567aa5d9b538b083e8b4f705e5408594c71268bfb1e
088bfb0fa232b95508ba55c670d48b08b78bb195ada008ad9fa6a99eb208
9eb195b58bb8088bcf76c362b60862b759a0508b086a8b6b836c7b086c7d
7173766b088cd093c39bb2089bb2a1a8a79f089f9ca492a78b08b08ba77e
a372089b7c9672936808e0920586c374b767aa0809fb91fbdc15a6a8ad99
b38b08b38bad7da56f08a56d98658b59088b587e62706d08716d6b7c668b
08708b7492749a0872997aa07ea7087fa784a88ba9088bb999b0a7a80809
0e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/CEEGGF+Arial findfont /Encoding get
dup 0 /g0 put
dup 49 /g20 put
dup 54 /g25 put
pop
%%EndResource
[/N18/CEEGGF+Arial -1 TZ
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
%%BeginResource: font CEEIKP+Symbol
ct_CffDict begin
15 dict begin
/FontInfo 15 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def
/version (001.008) def
/FullName (Symbol) def
/FamilyName (Symbol) def
/BaseFontName (Symbol) def
/Weight (Medium) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /CEEIKP+Symbol def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for def
/PaintType 0 def
/FontType 1 def
/FontMatrix [.001 0 0 .001 0 0 ] def
/FontBBox { -180 -293 1090 1010 } def
/StrokeWidth 0 def
currentdict end
systemdict begin
dup /Private 26 dict dup begin
/-|{string currentfile exch readhexstring pop}executeonly def
/|-{def}executeonly def
/|{put}executeonly def
/BlueValues [ -19 0 673 688 487 500 ] def
/StdHW [ 92 ] def
/StdVW [ 85 ] def
/BlueScale 0.039625 def
/BlueShift 7 def
/BlueFuzz 1 def
/ForceBold false  def
/ForceBoldThreshold 0 def
/LanguageGroup 0 def
/ExpansionFactor 0.06 def
/initialRandomSeed 0 def
/lenIV 4 def
/MinFeature {16 16} def
/password 5839 def
/Erode{
10.625 dup 3 -1 roll 0.1 mul exch 0.5 sub mul cvi sub dup mul
85 0 dtransform dup mul exch dup mul add
le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def
/OtherSubrs [
{ct_CffDict/F0Subr get exec}executeonly{ct_CffDict/F1Subr get exec}executeonly{ct_CffDict/F2Subr get exec}executeonly{ct_CffDict/HSSubr get exec}executeonly] |-
/Subrs 5  array
dup 0 15 -| 68CCB9B7733DBF957B5C4F6827AC8A |
dup 1 9 -| 68CCB9B776ADDED836 |
dup 2 9 -| 68CCB9B776AC088F04 |
dup 3 5 -| 68CCB9B7F6 |
dup 4 13 -| 68CCB9B7733AC657EC3EB6EC2F |
|-
2 index /CharStrings 2 dict dup begin
/.notdef 9 -| 68CCB9B776D66C9B0D |-
/alpha 277 -| 68CCB9B776D87432DCE0C732FE90B0E02819A546F9569936A35E864CCCF3A7F35E662AFE
4D357DC468E7B4B010159E32D6C17CB83E1B273CFE2BA3769A52B952C5D5B43A
42A15A6E3F2FA47C7D2A42E2450A9AE5EC1B9418D62358A9F622A035A38D0E7C
2CF7041374AC9B888D3C39B058BF174CC9D413BEBF632F18B1864F984A5F67D2
E81AB3E153200BBFD2AA95E6C8782CFE52A381B0ADE509352C33256AB2914799
54EBB18976149AE09FABE94803B04F91279B36C77E49DAAE6BC5D643DCB4D3DE
983EEF95189E02CA80FC240282A185503EB21E2D65FBAE9858D48427482B590D
073E37556BDA3BF7A2E60553B1283BE44FD651EEB6715342D5B136DB0FE2A9C8
19F385FAEB7F8ABAEEB3E88FE4E74C2CB6 |-
end
end
put
put
dup/FontName get exch definefont pop
end
/CEEIKP+Symbol findfont /Encoding get
dup 0 /.notdef put
pop
end
/CEEIKP+Symbol findfont /Encoding get
dup 0 /.notdef put
dup 97 /alpha put
pop
%%EndResource
[ 1 /alpha
/N34/CEEIKP+Symbol -1 TZ
%%BeginResource: font CEEIHL+Courier
ct_CffDict begin
15 dict begin
/FontInfo 15 dict dup begin
/Notice (Copyright (c) 1989, 1990, 1991, 1992, 1993, 1996, 1997, 1998 Adobe Systems Incorporated.  All Rights Reserved.) def
/version (004.000) def
/FullName (Courier) def
/FamilyName (Courier) def
/BaseFontName (Courier) def
/Weight (Medium) def
/ItalicAngle 0 def
/isFixedPitch true  def
/UnderlinePosition -224 def
/UnderlineThickness 52 def
end def
/FontName /CEEIHL+Courier def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for def
/PaintType 0 def
/FontType 1 def
/FontMatrix [.001 0 0 .001 0 0 ] def
/FontBBox { -28 -250 628 805 } def
/StrokeWidth 0 def
currentdict end
systemdict begin
dup /Private 29 dict dup begin
/-|{string currentfile exch readhexstring pop}executeonly def
/|-{def}executeonly def
/|{put}executeonly def
/BlueValues [ -14 0 572 585 434 448 782 803 626 626 ] def
/OtherBlues [ 236 243 344 344 -195 -193 ] def
/FamilyBlues [ -14 0 572 585 434 448 782 803 626 626 ] def
/FamilyOtherBlues [ 236 243 344 344 -195 -193 ] def
/StdHW [ 55 ] def
/StdVW [ 55 ] def
/BlueScale 0.039625 def
/BlueShift 7 def
/BlueFuzz 1 def
/ForceBold false  def
/ForceBoldThreshold 0 def
/LanguageGroup 0 def
/ExpansionFactor 0.06 def
/initialRandomSeed 0 def
/lenIV 4 def
/MinFeature {16 16} def
/password 5839 def
/Erode{
6.875 dup 3 -1 roll 0.1 mul exch 0.5 sub mul cvi sub dup mul
55 0 dtransform dup mul exch dup mul add
le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def
/OtherSubrs [
{ct_CffDict/F0Subr get exec}executeonly{ct_CffDict/F1Subr get exec}executeonly{ct_CffDict/F2Subr get exec}executeonly{ct_CffDict/HSSubr get exec}executeonly] |-
/Subrs 5  array
dup 0 15 -| 68CCB9B7733DBF957B5C4F6827AC8A |
dup 1 9 -| 68CCB9B776ADDED836 |
dup 2 9 -| 68CCB9B776AC088F04 |
dup 3 5 -| 68CCB9B7F6 |
dup 4 13 -| 68CCB9B7733AC657EC3EB6EC2F |
|-
2 index /CharStrings 9 dict dup begin
/.notdef 9 -| 68CCB9B776D9A12F95 |-
/period 43 -| 68CCB9B776D9A12FE4EBEB663D73353FB389871799C652D628056D88CDEAC0E3A7B42113
338D6EF617FE2E |-
/zero 128 -| 68CCB9B776D9A12FE4DE657B7567295334450515ECF965DB26A7B98A8E9816804D413217
5037BF9CF6A6F7747E57CE045C6073D94F15034F688EB6B70B5CFC880FB3C2ED
D00AE706A31627555E7F8566BE96AB39E06C712B97C482AA3FD26473253172D8
CE83ABA17C0AFABEAD4E2DBE13859F1D3EF554E2A0CC3DE5B138EEED |-
/one 50 -| 68CCB9B776D9A12F10E894D3984CAB6C802F49CED2AE1EC203A26F701BD59D57DB7FE943
132B44B8705ADE821654B8DBE427 |-
/two 105 -| 68CCB9B776D9A12F10E894D3E226A9724650F60B70C118BD9A18D8DA511796595B8D06DE
6701F9B3250492072CFFF58BA203184DE1D6F82A93C39F40EAF873C3E78AD122
A60F99E6D200CB98A704E1245D074F233E5BE08545EF4EA377B406F0BA1584A4
4D7B829755 |-
/four 74 -| 68CCB9B776D9A12F10E894DCB0C19F517DEA16C0B2A6ADE6B3A2B870EEBE14D6A4C0E75D
FDEAF02FC7BBF0FAFA256510BB981E36D1BBF3776BF2F99D1AFFF244B8E1CA57
8A12E084223C |-
/five 105 -| 68CCB9B776D9A12FE4DE657490F040475481F080D97B81E6E5BA5C6E1DF228B6B41DC45F
CE927910740EBC53D5E84D9F1007048FEF4D7ED0849FCD7F19A25F2621C1D585
604EA175936C3A6A7F9F00FC15D2921C1A6B1DADED693BA2862B261336C0B374
BE15280A48 |-
/six 236 -| 68CCB9B776D9A12FE5283C1EC29F56FBF59813456D075BE656A6B7D51DA92BEA4D58335F
1BE7100F199ED436D12700DDE1EB44CFD9ABCA694BB4F4407469BF24870172C3
78E3C0245345AD1CF93EA2447E423E84A96CBA8E4D356C7E90C322A8273A3CA4
FCFE4F8FF30FE787FDDEC8BD7841F2EDB442EBE33D1DAFE22F47C6DD17A4BD60
9F3D3675E20D7D458E34D7FCA6BEBD5453072F0C014DB085061F201678CF6981
71EF9BEB0A81129E63C9E365F9B26A3B155E4A577183AFD5821BD399DD8848D4
A85A1866F70BDDACFFEF8F41C21EDAB5641ADD102AA31DA8B12D08AB25A13907
DC81B3E15C0E0276 |-
/eight 216 -| 68CCB9B776D9A12FE5290AC5B71F0EBDFCB35CA3A27650145B1000C989A1FF2A9AF3AB5C
4F0B2B8082DB987A34FE9A8FDD358AD7EC5FB876FDB549101BA650EDBED5E272
7E4896E3B8D0BB1CA90891D5E64D338F83FA53DF67F0D4E1D5D86B4F778629BC
9A7967E7F7D9DF60F8404C3912D3690676493BBB63639078ED2B812ACE15ABF5
E1F89582EE05E65AE108FB2270AA369CB7081CD0C76379858D2948D9DCF5EC79
EB5A905CF8B1D76A81BE845094CE95D7945BB78CEB8435F3BC7263AC9C4508A9
0B8BBE7042EF0CB50817D8C23F4FB9DC23DE86A9 |-
end
end
put
put
dup/FontName get exch definefont pop
end
/CEEIHL+Courier findfont /Encoding get
dup 0 /.notdef put
pop
end
/CEEIHL+Courier findfont /Encoding get
dup 0 /.notdef put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
pop
%%EndResource
[/N21/CEEIHL+Courier 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
152 58 620 293 re W n
[ 0 -1 1 0 93.93999 502.024 ] concat
/N24 [/CIEBasedABC <<
/MatrixLMN [0.412415 0.212646 0.0193329 0.35762 0.715134 
0.119217 0.180511 0.0721893 0.95076 ]
/DecodeLMN [{2.16942 exp}bind dup dup]
/WhitePoint [0.950455 1 1.08905]
>>]/ColorSpace defineRes pop
/N37 currentfile /ASCII85Decode filter /LZWDecode filter 512 string
%%BeginData: 807 ASCII Bytes
{readstring pop} bind exec
J04gt"9J]-JO#lY80efV#(o48!/O#e'FKO\Tn(3p1)pdZ6_XSeKL-psM+"(h8>K-7
(5kVV!Jn['1`D?CUOgMIE]bD(8#-1m"G0#cO[u:"8L0Hm-Bh#t!f9=><%=/*V1Qg"
Z<T#K9;VdtKYh7TR7sK18YjdN2OdF=",XtUF?5sfVh<+PnpEWn:T+C'"Tj?DThq\@
8gP+/7\`h["H#VlPY.cMWJ&E*17V+;;lU!.KgMS5WDomO8u5Fe<i]6$"cC9.Zs'S4
X+e^XEkG_^=0)T6"bO[%Yun)^9-obFB!YXB#)bpEe7uBpXbP#1ZJ9?,>HS2=Ku2nk
\Ql:m9;U)'G.V%`#E-R\oQn2WYD:<_o)*rDQf\9u?l0(RJmarm&;4I/7MpkgQt@Is
@MjhJMIMsM0T9KY`]/ugR-$YqA/PSBP%9t-:m>N/7TbsfR:]ioAf6>:RV%tbE1CPY
`d"(fRHB$mBGq)2U1fuBOJHS/7[U&eRV&4kC)Vi*WbS!"YcMUY`ji0eRc_DiC`<T"
Z>?!Wd'RX/7bG.dRqCTgDB">o\o+"7n@WZY`q[8dS*'deE#])g_Jl"m&B&Q.7i96c
S7`tcEZBi_b&X#M0[+SXa#M@cSEE/aF<(TWdWD$-:t0V.7p+>bSS)?_Frc?Og30$b
E85XXa*?HbS`bO]GTI*Gicq%BOQ:[.8!rFaSnF_[H6.j?l?]&"Yj?]Xa11PaT'*oY
HliU7npI&Wd.D`.8(dN`T4d*WINO@/qL5'7nGIbXa8#X`TBHO~>
%%EndData
15 dict begin
/Sample exch def
currentdict end
[exch {begin
/_x0 exch def
/_tmp0 _x0
dup 1 ge {pop 255}
{dup 0 le {pop 0}
{255 mul 
} ifelse
} ifelse
def
/min0 _tmp0 cvi def
/max0 _tmp0 ceiling cvi def
/f0
min0 max0 eq
{{min0 f1}}
{{
[min0 f1 max0 f1
0 1 0 {dup 3 index exch get exch 2 index exch get
_tmp0 min0 max0 5 3 roll int
3 1 roll} for pop pop]
}} ifelse
def
/f1
{/prm0 exch def [
 0 255 prm0 limit 16 mul -3 bitshift /byte-offset exch def
0 0 1 1 {byte-offset add Sample exch get exch 8 bitshift or} for
]} def
/rnd {65536 mul 0.5 add floor 65536 div} def
f0 aload pop
dup 65535 ge {pop 1}
{dup 0 le {pop -1}
{2 65535 div mul 1 sub 
} ifelse
} ifelse
rnd
end
} bind aload pop] cvx readonly
/Function defineRes pop
/N36 (\000\001\002\003\004\005\006\007\b\t\n\013\f\r\016\017\020\021\022\023\024\025\026\027\030\031\032\033\034\035\036\037 !"#$%&'\(\)*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\200\201\202\203\204\205\206\207\210\211\
\212\213\214\215\216\217\220\221\222\223\224\225\226\227\230\231\232\233\234\235\236\237\240\241\242\243\244\245\246\247\250\251\252\253\254\255\256\257\260\261\262\263\264\265\266\267\270\271\272\273\274\275\276\277\300\301\302\303\304\305\306\307\310\311\
\312\313\314\315\316\317\320\321\322\323\324\325\326\327\330\331\332\333\334\335\336\337\340\341\342\343\344\345\346\347\350\351\352\353\354\355\356\357\360\361\362\363\364\365\366\367\370\371\372\373\374\375\376\377)15 dict begin
/Sample exch def
currentdict end
[exch {begin
/_x0 exch def
/_tmp0 _x0
dup 1 ge {pop 255}
{dup 0 le {pop 0}
{255 mul 
} ifelse
} ifelse
def
/min0 _tmp0 cvi def
/max0 _tmp0 ceiling cvi def
/f0
min0 max0 eq
{{min0 f1}}
{{
[min0 f1 max0 f1
0 1 0 {dup 3 index exch get exch 2 index exch get
_tmp0 min0 max0 5 3 roll int
3 1 roll} for pop pop]
}} ifelse
def
/f1
{/prm0 exch def [
 0 255 prm0 limit 8 mul -3 bitshift Sample exch get ]} def
/rnd {256 mul 0.5 add floor 256 div} def
f0 aload pop
dup 255 ge {pop 1}
{dup 0 le {pop 0}
{255 div 
} ifelse
} ifelse
rnd
end
} bind aload pop] cvx readonly
/Function defineRes pop
/N38 <<
/SA false 
/OP false 
/BG /N36 /Function findRes 
/UCR /N37 /Function findRes 
/TR {}
/SM 0.02 
>> /ExtGState defineRes pop
/N24 /ColorSpace findRes cs
1 1 1 sc
/N38 /ExtGState findRes gs
1 i
4.92 841.071 585 -840 rf
BT
/N18 1 Tf
0 15.9689 -15.96001 0 582.36 815.0305 Tm
0 0 0 sc
-0.00011 Tc
0 Tw
(61)Tj 
/N23 1 Tf
0 45.98579 -45.96001 0 57.60001 142.6705 Tm
0.09 0.31 0.98399 sc
0.00031 Tc
0.00011 Tw
(Delay Bounds with PSRG)Tj 
-0.608 -1.2037 TD
0.0005 Tc
0.0004 Tw
(versus with GR node model)Tj 
ET
1 1 1 sc
181.32001 560.03101 210.96001 -396.48 rf
181.32001 560.03101 210.96001 -396.48 rf
/N24 /ColorSpace findRes CS
0 0 0 SC
1 J
1 j
0.12 w
10 M
[]0 d
376.8 265.431 m
375.60001 265.55099 l
S 
BT
/N21 1 Tf
0 14.04761 -14.03999 0 393.48 248.99049 Tm
0 0 0 sc
-0.002 Tc
0 Tw
(0.05)Tj 
ET
376.8 332.991 m
375.60001 333.11099 l
S 
BT
0 14.04761 -14.03999 0 393.48 320.63049 Tm
(0.1)Tj 
ET
376.8 400.431 m
375.60001 400.55099 l
S 
BT
0 14.04761 -14.03999 0 393.48 383.99049 Tm
(0.15)Tj 
ET
376.8 469.19099 m
375.60001 469.311 l
S 
BT
0 14.04761 -14.03999 0 393.48 456.9505 Tm
(0.2)Tj 
ET
376.8 536.75 m
375.60001 536.87 l
S 
BT
0 14.04761 -14.03999 0 393.48 520.0705 Tm
(0.25)Tj 
ET
376.8 210.47099 m
375.60001 210.591 l
376.8 224.03101 m
375.60001 224.151 l
376.8 237.951 m
375.60001 238.071 l
376.8 251.75101 m
375.60001 251.871 l
376.8 277.791 m
375.60001 277.911 l
376.8 291.711 m
375.60001 291.83099 l
376.8 305.271 m
375.60001 305.39101 l
376.8 319.19099 m
375.60001 319.311 l
376.8 346.67101 m
375.60001 346.791 l
376.8 360.47099 m
375.60001 360.591 l
376.8 374.271 m
375.60001 374.39101 l
376.8 386.511 m
375.60001 386.75101 l
376.8 414.11099 m
375.60001 414.231 l
376.8 427.911 m
375.60001 428.03101 l
376.8 441.711 m
375.60001 441.83099 l
376.8 455.39101 m
375.60001 455.511 l
376.8 483.11099 m
375.60001 483.231 l
376.8 495.35001 m
375.60001 495.47 l
376.8 509.151 m
375.60001 509.271 l
376.8 522.951 m
375.60001 523.07001 l
376.8 188.271 m
376.92 544.911 l
338.64 196.55099 m
338.75999 199.311 l
S 
BT
0 14.04761 -14.03999 0 344.52 167.8705 Tm
(0.2)Tj 
ET
300.60001 196.55099 m
300.72 199.311 l
S 
BT
0 14.04761 -14.03999 0 306.48 167.8705 Tm
(0.4)Tj 
ET
262.32001 196.55099 m
262.44 199.311 l
S 
BT
0 14.04761 -14.03999 0 268.32001 167.8705 Tm
(0.6)Tj 
ET
224.16 196.55099 m
224.28 199.311 l
S 
BT
0 14.04761 -14.03999 0 230.16 167.8705 Tm
(0.8)Tj 
ET
186 196.55099 m
186.12 199.311 l
S 
BT
0 14.04761 -14.03999 0 192.12 184.3105 Tm
0 Tc
(1)Tj 
ET
367.32001 196.55099 m
367.44 197.991 l
357.72 196.55099 m
357.84 197.991 l
348.12 196.55099 m
348.24001 197.991 l
329.16 196.55099 m
329.28 197.991 l
319.56 196.55099 m
319.67999 197.991 l
310.08 196.55099 m
310.2 197.991 l
290.88 196.55099 m
291 197.991 l
281.39999 196.55099 m
281.52 197.991 l
271.92 196.55099 m
272.03999 197.991 l
252.84 196.55099 m
252.96001 197.991 l
243.24001 196.55099 m
243.36 197.991 l
233.75999 196.55099 m
233.88 197.991 l
214.67999 196.55099 m
214.8 197.991 l
205.2 196.55099 m
205.32001 197.991 l
195.60001 196.55099 m
195.72 197.991 l
376.8 196.55099 m
186 196.67101 l
S 
0 J
3 w
376.8 210.47099 m
375.60001 224.151 l
375.60001 237.951 l
374.39999 251.75101 l
373.2 264.11099 l
372 279.231 l
370.8 291.711 l
369.72 298.431 l
368.39999 306.711 l
366 320.511 l
363.72 326.151 l
361.32001 334.311 l
357.72 341.271 l
352.92 346.67101 l
349.44 350.871 l
344.64 353.631 l
339.84 356.271 l
332.64 360.47099 l
327.96001 361.911 l
323.16 363.231 l
308.75999 367.431 l
285 370.071 l
280.32001 370.071 l
275.39999 371.511 l
274.32001 371.511 l
274.32001 536.75 l
S 
1 0 0 SC
376.8 210.47099 m
375.60001 224.151 l
375.60001 237.951 l
374.39999 251.75101 l
373.2 264.11099 l
372 279.231 l
370.8 291.711 l
369.72 298.431 l
368.39999 306.711 l
366 320.511 l
363.72 326.151 l
361.32001 334.311 l
357.72 341.271 l
352.92 346.67101 l
349.44 350.871 l
344.64 353.631 l
342.12 354.951 l
341.03999 356.271 l
339.84 357.83099 l
338.64 357.83099 l
338.64 536.75 l
S 
0 0 1 SC
376.8 210.47099 m
375.60001 224.151 l
375.60001 237.951 l
374.39999 251.75101 l
373.2 264.11099 l
372 279.231 l
370.8 291.711 l
368.39999 306.711 l
368.39999 309.591 l
367.32001 313.67101 l
367.32001 314.991 l
366 316.431 l
366 536.75 l
S 
0 0 0 SC
376.8 210.47099 m
375.60001 224.151 l
375.60001 237.951 l
374.39999 251.75101 l
373.2 264.11099 l
372 279.231 l
370.8 291.711 l
369.72 298.431 l
368.39999 306.711 l
366 320.511 l
363.72 326.151 l
361.32001 334.431 l
357.72 341.271 l
352.92 346.67101 l
349.44 350.871 l
344.64 353.631 l
339.84 356.271 l
332.64 360.47099 l
327.96001 361.911 l
323.16 363.231 l
308.75999 367.431 l
298.2 368.75101 l
285 370.19099 l
263.52 371.511 l
249.24001 372.83099 l
228.96001 374.39101 l
206.28 374.39101 l
190.8 375.711 l
S 
1 J
0.12 w
190.8 375.711 m
186 375.83099 l
186 381.11099 m
376.8 381.231 l
S 
BT
/N34 1 Tf
0 24.01311 -24 0 398.16 573.83051 Tm
(\001)Tj 
/N29 1 Tf
-20.57381 7.535 TD
-0.0005 Tc
(delay)Tj 
20.30389 -2.5 TD
0.0007 Tc
0.00031 Tw
(1 MB)Tj 
0 -2.75 TD
0.0004 Tc
0.0006 Tw
(0.4 MB)Tj 
0 -1 TD
0.0005 Tc
0.0005 Tw
(0.1 MB)Tj 
0 14.04761 -14.03999 0 284.39999 113.27049 Tm
0.396 0.396 0.396 sc
0.0029 Tc
0 Tw
(h=)Tj [9.2 ]TJ (10)Tj 
-3.68179 -1.31619 TD
-0.0011 Tc
-0.00729 Tw
(e = 2 )Tj [-8.60001 ]TJ (M)Tj [10.39999 ]TJ (T)Tj [-4.8 ]TJ (U/r )Tj 
0.41859 -1.3248 TD
-0.0007 Tc
0.0009 Tw
(r=15)Tj [11.7 ]TJ (0 Mb)Tj [11.7 ]TJ (/s )Tj 
3.0667 -1.31619 TD
-0.00459 Tc
0 Tw
(C=)Tj [-6.89999 ]TJ (5)Tj [7.8 ]TJ (R)Tj 
ET
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF
