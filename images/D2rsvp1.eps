%!PS-Adobe-2.0 EPSF-1.2
%%Title: D2RSVP1.epsf
%%Creator: CLARIS EPSF Export Filter V1.0
%%CreationDate:3/6/97  2:29:32 p.m.
%%BoundingBox: -3 332 805 793                                                                          
%%QDBoundingBox: -2.113 -0.652 804.886 459.347                                                           
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%ObjectsIncluded: tText=T tLine=T tRect=T tRRect=T tOval=T tArc=T tFree=T tPoly=T tBMap=T tNote=T tBez=T tPMap=T 
%%AttributesIncluded: kBaWPattType=T kPixPattType=T kGradientType=T 
%%EndComments
/MAV 300 dict def
MAV begin 
/useClip true def 
/top    0 def 
/left   1 def 
/bottom 2 def 
/right  3 def 
/CM     6 array def 
/CTM    6 array def 
/CTMR   6 array def 
/MTC    6 array def 
/blimit 1500 def 
/bcnt   0 def 
/rbox 8 array def 
/segbox 8 array def 
/bbox1 4 array def 
/c1 3 array def 
/c2 3 array def 
/d 3 array def    
/delta 3 array def 
/mycurrentrgbcolor 3 array def 
/ulx 0 def 
/uly 1 def 
/llx 2 def 
/lly 3 def 
/urx 4 def 
/ury 5 def 
/lrx 6 def 
/lry 7 def 
/sp [0 0] def 
/ep [0 0] def 
/bbox 4 array def 
/pbox 4 array def 
/scrnProc currentscreen 3 1 roll pop pop def
/currentcolorscreen where {
begin
currentcolorscreen
end
3 1 roll pop pop 
4 2 roll pop pop 
5 -2 roll pop pop 
6 -2 roll pop pop 
/kProc exch def 
/bProc exch def 
/gProc exch def 
/rProc exch def 
} if 
/Max {2 copy gt {pop}{exch pop} ifelse} bind def
/Min {2 copy lt {pop}{exch pop} ifelse} bind def
/cellPenW 72.0 /currentcolorscreen where
{begin currentcolorscreen end pop pop
10 1 roll pop pop 8 1 roll pop pop
 6 1 roll pop pop Max Max Max }
{currentscreen pop pop} ifelse div 2.0 div def
%%BeginProcSet : rect 
/rect { 
 /saveobj save def 
 R PC PF LC SS 
 saveobj restore 
} bind def 
%%EndProcSet 
%%BeginProcSet : R 
/R { 
 newpath
 pbox astore pop
 0 792 translate 1 -1 scale CTMR currentmatrix pop exch translate
 /objectCord mstore def
 pbox right get 2 div
 dup pbox left get exch sub
 pbox left 3 -1 roll put 
 dup pbox right 3 -1 roll put
 pbox bottom get 2 div 
 dup pbox top get exch sub
 pbox top 3 -1 roll put
 dup pbox bottom 3 -1 roll put
 translate 
 CTM currentmatrix pop
 57.3 mul rotate
 RT
} bind def
%%EndProcSet
%%BeginProcSet : SaveScreenBW
 /SaveScreenBW {
 currentscreen
 /scrnProc exch def
 /scrnAngle exch def
 /scrnFreq exch def
 } bind def
%%EndProcSet
%%BeginProcSet : RestoreScreenBW
 /RestoreScreenBW {
 scrnFreq scrnAngle MAV /scrnProc get setscreen
 } bind def
%%EndProcSet
%%BeginProcSet : SetFreqAngleBW
 /SetFreqAngleBW {
 currentscreen
 3 1 roll
 pop pop
 setscreen
 } bind def
%%EndProcSet
%%BeginProcSet : SaveScreenColor 
 /SaveScreenColor {
 currentcolorscreen
 /grayProc exch def
 /grayAngle exch def
 /grayFreq exch def
 /bProc exch def
 /bAngle exch def
 /bFreq exch def
 /gProc exch def
 /gAngle exch def
 /gFreq exch def
 /rProc exch def
 /rAngle exch def
 /rFreq exch def
 } bind def
%%EndProcSet
%%BeginProcSet : RestoreColorScreen
 /RestoreColorScreen {
 rFreq rAngle MAV /rProc get gFreq gAngle MAV /gProc get bFreq bAngle MAV /bProc get grayFreq grayAngle MAV /grayProc get setcolorscreen
 } bind def
%%EndProcSet
%%BeginProcSet : SetFreqAngleColor
 /SetFreqAngleColor { 
 currentcolorscreen 
 3 1 roll pop pop
 4 2 roll pop pop
 5 -2 roll pop pop
 6 -2 roll pop pop
 4 1 roll 
 6 1 roll 
 8 1 roll 
 10 1 roll 
 setcolorscreen 
 } bind def 
%%EndProcSet 
/initmsaverestore { 
userdict begin 
/mdict 10 dict def 
mdict begin 
/mindex -1 def 
/mstacksize 25 def 
/mstack mstacksize array def 
/incmindex { 
/mindex mindex 1 add def 
} bind def 
/decmindex { 
/mindex mindex 1 sub def 
} bind def 
/checkmindex { 
mindex 0 lt { 
(%ERROR: msave/mrestore stack underflow: Offending command 'mrestore'
) print flush 
stop 
} 
{ 
mindex mstacksize ge { 
(%ERROR: msave/mrestore stack overflow: Offending command 'msave'
) print flush 
stop 
} if 
} ifelse 
} bind def 
/mpush { 
incmindex 
checkmindex 
mstack mindex 
3 -1 roll put 
} bind def 
/mpop { 
checkmindex 
mstack mindex get 
decmindex 
} bind def 
end 
end 
} bind def 
/msave { 
mdict begin 
matrix currentmatrix mpush 
end 
} bind def 
/mrestore { 
mdict begin 
mpop setmatrix 
end 
} bind def 
/msavelevel { 
mdict begin 
mindex 1 add 
end 
} bind def 
/mstore {
matrix currentmatrix
} bind def
/AutoSizeY {
0 0 pl
dup 3 1 roll
4 -1 roll  
add
pl exch pop
exch sub
} bind def
/pl {  
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bind def
/pll {
transform
round exch
round exch
itransform
} bind def
/pr { 
dtransform
round exch
round exch
idtransform
} bind def
/m { 
pl  moveto
} bind def
/l { 
pl lineto
} bind def
/c { 
pl curveto
} bind def
/rm { 
pr rmoveto
} bind def
/rl { 
pr rlineto
} bind def
/ar { 
5 -2 roll pl
5 2 roll
arc
} bind def
/an { 
5 -2 roll pl
5 2 roll
arcn
} bind def
/MakePatternFont {
/FontDict 20 dict def
FontDict begin
/FontName exch def
/Encoding exch def
/FontMatrix [1 0 0 1 0 0 ] def
/FontType 3 def
/FontBBox [ 0 0 1 1 ] def
/PatternDict exch def
/RenderPattern {
patternDict exch get
exec
} bind def
/BuildChar {
exch begin
1 0 0 0 1 1 setcachedevice
Encoding exch get RenderPattern
end
} bind def
FontName FontDict definefont pop
end
} bind def
/SnapToPattenGrid
	{
	exch
	dup 0 lt {
		1 index sub
	} if
	1 index
	div truncate
	mul
} bind def
/FillPatternString {
dup length
1 sub
0 1 3 -1 roll {
2 index
2 index
3 -2 roll
put
} for
pop pop
} bind def
/AutoSizeY {
	0.0 exch dtransform
	round
	idtransform exch pop
} bind def
 /AutoSizeX {
	0.0 dtransform
	exch
	round
	exch
	idtransform pop
} bind def 
/AutoCellSize {
	AutoSizeY
	exch
	AutoSizeX
	exch
} bind def
/CheckPath {
	false
	{ pop pop pop true exit}
	{ pop pop pop true exit}
	{ pop pop pop pop pop pop pop true exit}
	{ pop true exit}
	pathforall
} bind def
/PatternFill {					%		patternCharacter
	/patternString 1 string def
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/patternSize exch 24.0 mul def
	/PatternSizeX exch 24.0 mul patternString length mul def
	/flaterror 0 def
	patternString FillPatternString
	gsave
		flaterror 1 add setflat
		flattenpath
		pathbbox
	grestore
	psy add flaterror add psy SnapToPattenGrid
	exch psx add flaterror add psx SnapToPattenGrid
	3 -1 roll flaterror sub psy SnapToPattenGrid
	4 -1 roll flaterror sub psx SnapToPattenGrid
	4 2 roll pll
	4 2 roll pll
	/llxsnap exch def
	/llysnap exch def
	/urxsnap exch def
	/urysnap exch def
	gsave
		useClip true eq {clip}{eoclip} ifelse newpath
		/PatternFont findfont [psx 0.0 0.0 psy 0.0 0.0] makefont setfont
		llysnap patternSize urysnap {
			llxsnap exch moveto
			llxsnap PatternSizeX urxsnap {
				pop
				patternString show
				%currentpoint am
			} for
		} bind for
	grestore
	cm setmatrix
} bind def				%		End 'PatternFill'
/DefaultPatternFont {
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/psy exch iSizeY mul def
	/psx exch iSizeX mul def
	/patternDict 64 dict def
	patternDict begin
		/NotDef {} def
		/LiteDiagLines {
			iSizeX iSizeY false [iSizeX 0.0 0.0 iSizeY -1.0 mul  0.0 iSizeY]
			{pat}
			imagemask
		} bind def
	end
	/CustEncoding 256 array def
	0 255 1 {
		CustEncoding exch /NotDef put
	} bind for
	CustEncoding 65 /LiteDiagLines put
	patternDict CustEncoding /PatternFont MakePatternFont
	/pathSegProc {
		strokepath
		CheckPath {
			65 PatternFill newpath
		} if
	} bind def
	cm setmatrix
} bind def
/XRound {
	dup
	3 -1 roll
	exch mul round
	exch div
} bind def
/RoundMatrix {
	/i 0 def
	dup {
		100000.0 XRound
		1 index
		exch i exch put
		/i i 1 add def
	} forall
} bind def
/GetBoxesRatio {
3 -1 roll sub
7 1 roll
exch sub
6 1 roll
3 -1 roll sub
5 1 roll
exch sub
4 1 roll
3 -1 roll div
3 1 roll
exch div
exch
} bind def
%%BeginProcSet : Text Attributes Procs
/T {792 exch sub} bind def
/sx 0 def
/sy 0 def
/ex 0 def
/ey 0 def
/lw  0 def
/siz 0 def
/U {gsave 0 setlinecap
/lw siz 0.078125 mul def  /ey exch neg def /ex exch def /sy exch neg def /sx exch def
fontkind plain eq 
 {
  lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
 }
 {
   currentdict /outlineFontSize known outlineFontSize 0 gt and
     {
       fontkind outline eq
         {
           /sy sy 0.0119444 siz mul sub def
           /ey ey 0.0119444 siz mul sub def
           gsave 
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
       fontkind shadow eq fontkind outlineshadow eq or
         {
           /sy sy 0.0358332 siz mul sub def
           /ey ey 0.0358332 siz mul sub def
           lw setlinewidth
           lw 2 div sx add sy
           lw 2 div sub moveto
           lw 2 div ex add ey
           lw 2 div sub lineto stroke 
           gsave
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
      } if
 } ifelse
grestore} bind def
/plain 1 def
/outline 2 def
/shadow 3 def
/outlineshadow 4 def
/fess {
	currentdict /outlineFontSize known {
		/outlineFontSize 2 index def
	} if
	findfont exch dup /siz exch def scalefont setfont
} bind def
/SHDW {gsave siz oldfontname fess siz 0.055 mul x add y siz 0.05 mul sub moveto c show grestore} def
/NRML {gsave 1 1 1 setrgbcolor siz oldfontname fess x y moveto c show grestore siz /Outline fess  x y moveto c show} def
/S {
fontkind plain eq {neg moveto show} if
fontkind outline eq {neg /y exch def /x exch def /c exch def NRML} if
fontkind shadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
fontkind outlineshadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
} bind def
/F {
/fontkind exch def
fontkind plain eq {fess} if
fontkind outline eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind shadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind outlineshadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
} bind def
/makeoutlinedict 15 dict def
/makeoutlinefont
 {
  makeoutlinedict begin
   /uniqueid exch def
   /strokewidth exch def
   /newfontname exch def
   /basefontname exch def
   FontDirectory basefontname known not {
    /basefontname /Times-Roman def
   } if
   /basefontdict basefontname findfont def
   /numentries basefontdict maxlength 1 add def
   basefontdict /UniqueID known not
   {/numentries numentries 1 add def} if
   /outfontdict numentries dict def
   basefontdict
   {
     exch dup /FID ne {exch outfontdict 3 1 roll put} {pop pop} ifelse
	  }forall
   outfontdict /FontName newfontname put
   outfontdict /PaintType 2 put
   outfontdict /StrokeWidth strokewidth put
   outfontdict /UniqueID uniqueid put
   newfontname outfontdict definefont pop
  end
  }def
/UID {
 findfont dup /UniqueID known
  {/UniqueID get 1 add}
  {pop 1}
  ifelse
} def
/OLF {
dup
/Outline
1000 62 div
4 -1 roll
UID
/outlineFontSize 5 index def
makeoutlinefont
/Outline findfont exch scalefont setfont
} def
/CopyEncoding {
findfont
/Encoding get
dup length array
/tarrayz exch def
tarrayz 0
3 -1 roll
putinterval
tarrayz
} bind def
/Re-encode {
dup length array copy
/eap 0 def
exch {
dup type /integertype eq {
/eap exch def
} {
1 index
exch
eap exch
put
/eap eap 1 add def
} ifelse
} forall
} bind def
/EncodeFont	{
findfont dup
length dict
begin
{	1 index /FID ne
{ def }
{ pop pop } ifelse
} forall
/FontName exch def
/Encoding exch def
FontName currentdict
end
definefont pop
} bind def
%%EndProcSet
%%BeginProcSet : clip2pathbbox
/clip2pathbbox {
	/magicNum linewidth 2 div 1 2 sqrt div mul def
	pathbbox
	/urymn exch magicNum add def
	/urxmn exch magicNum add def
	/llymn exch magicNum sub def
	/llxmn exch magicNum sub def
	newpath llxmn llymn moveto llxmn urymn lineto urxmn urymn lineto urxmn llymn lineto
	closepath clip newpath
} bind def
%%EndProcSet 
%% Line takes the following arguments:
%% linewidth xEnd yEnd xStart yStart
%%BeginProcSet : Line
/Line {
MAV /LC get length 0 ne
{
	gsave
			newpath
			MAV /ArrowType get length 0 eq
			MAV /SD get length 0 eq and
			{2 setlinecap /UseClip {clip2pathbbox} def }
			{0 setlinecap /UseClip {} def } ifelse
			0 792 translate
			1 -1 scale
			CTM currentmatrix pop
			/yStart exch def /xStart exch def /yEnd exch def /xEnd exch def /linewidth exch def
			MAV /ArrowType get length 0 eq xStart xEnd ne yStart yEnd ne and and
			{xStart yStart moveto xEnd yEnd lineto UseClip xStart yStart moveto xEnd yEnd lineto}
			{xStart yStart moveto xEnd yEnd lineto} ifelse
			linewidth setlinewidth SD strokepath
			CheckPath {LC PF ArrowType} if
	grestore
}
{pop pop pop pop pop} ifelse
} bind def
%% Line takes the following arguments:
%% linewidth xEnd yEnd xStart yStart
%%BeginProcSet : ZeroLine
/ZeroLine {
	gsave
		newpath
		MAV /ArrowType get length 0 ne {
			/UseClip {} def
			0 792 translate
			1 -1 scale
			pop pop pop pop pop
			CTM currentmatrix pop
			ArrowType
		} if
	grestore
} bind def
/CompensateForStroke {
	sin currentlinewidth mul
	exch
	cos currentlinewidth mul
	dup 0 translate
	4 -1 roll exch 2.0 mul sub
	3 1 roll
	2.0 mul sub
} bind def
/arrowdict 10 dict def
arrowdict begin
	/SwallowTail {
		newpath
		0.0 0.0 moveto
		1.0 -.5 lineto
		.666 0.0 lineto
		1.0 .5 lineto
		closepath
	} bind def
	/Triangular {
		newpath
		0.0 0.0 moveto
		1.0 -.5 lineto
		1.0 .5 lineto
		closepath
	} bind def
	/OpenTri {
		newpath
		1.0 0.5 moveto
		0.0 0.0 lineto
		1.0 -0.5 lineto
	} bind def
	/ClosedTri {
		newpath
		1.0 0.5 moveto
		0.0 0.0 lineto
		1.0 -0.5 lineto
		closepath
	} bind def
	/SlashBar {
		newpath
		0.5 -.5 moveto
		-.5 0.5 lineto
	} bind def
	/Dot {
		newpath
		0.5 0.0 moveto
		0 0 1 0 360 arc
		closepath
	} bind def
	/ExtSlashBar {
		newpath
		1.0 -.5 moveto
		0.0 0.5 lineto
	} bind def
end
/ScaleArrowHead {
	0 0 4 -2 roll
	0 0 1 1
	8 -4 roll GetBoxesRatio
	scale
} bind def
/DrawArrowHead {
	gsave
	[] 0 setdash
	currentpoint translate rotate
	{
		4 copy
		gsave
			initmatrix
			100 200 translate
			msave
				ScaleArrowHead pop
				arrowdict exch get exec
			mrestore
			strokepath
			0 0 3 index 3 index
			pathbbox 8 4 roll
			GetBoxesRatio
			4 2 roll
		grestore
		3 index 1.0 exch sub
		6 -1 roll
		{
			2 index mul
			0 translate
		}{
			pop
		} ifelse
		msave
			ScaleArrowHead scale
			arrowdict exch get exec
		mrestore
		strokepath
	} {
		msave
		ScaleArrowHead
		arrowdict exch get exec
		mrestore
	} ifelse
		CheckPath {
			LC PF
		} if
	grestore
} bind def
%%EndProcSet 
%%BeginProcSet : SR 
/SR { 
 pbox left get pbox top get moveto 
 pbox right get pbox top get lineto 
 pbox right get pbox bottom get lineto 
 pbox left get pbox bottom get lineto 
 closepath
} bind def 
%%EndProcSet 
%%BeginProcSet : RR1 
/RR1 {
pbox top get pbox bottom get sub abs
pbox left get pbox right get sub abs
2 copy lt {
Min
2 div dup dup dup
pbox left get add pbox left 3 -1 roll put
pbox right get exch sub pbox right 3 -1 roll put
pbox left get pbox bottom get moveto
pbox right get 0 3 -1 roll 90 -90 arcn
pbox left get 0 3 -1 roll -90 90 arcn closepath
} {
Min
2 div dup dup dup
pbox bottom get exch sub pbox bottom 3 -1 roll put
pbox top get add pbox top 3 -1 roll put
pbox left get pbox bottom get moveto
pbox left get add pbox top get
2 index
180 0 arc
dup pbox left get add pbox bottom get
3 -1 roll 0 180 arc
closepath
} ifelse
} bind def
%%EndProcSet 
%%BeginProcSet : RR2 
/RR2 { 
dup dup dup dup dup dup dup dup 
pbox top get add pbox top 3 -1 roll put 
pbox left get add pbox left 3 -1 roll put 
pbox bottom get exch sub pbox bottom 3 -1 roll put 
pbox right get exch sub pbox right 3 -1 roll put 
pbox bottom get add pbox left get exch moveto 
pbox right get pbox bottom get 3 -1 roll 90 0 arcn 
pbox right get pbox top get 3 -1 roll  0 270 arcn 
pbox left get pbox top get 3 -1 roll  270 180 arcn 
pbox left get pbox bottom get 3 -1 roll 180 90 arcn closepath
} bind def 
%%EndProcSet
%%BeginProcSet : E
/E {
1.415 setmiterlimit
CM currentmatrix pop
pbox right get pbox left get sub abs dup
pbox bottom get pbox top get sub abs dup 3 -1 roll
lt {exch dup 3 -1 roll exch div 1 exch}
{dup 3 -1 roll exch div 1} ifelse scale 
0 0 3 -1 roll 2 div 0 360 arc closepath
CM setmatrix
} bind def
%%EndProcSet
%%BeginProcSet : A1
/A1 {msave
pbox right get pbox left get sub abs dup
pbox bottom get pbox top get sub abs dup 3 -1 roll
lt {exch dup 3 -1 roll exch div 1 exch}
{dup 3 -1 roll exch div 1} ifelse scale 
0 0 3 -1 roll 2 div 5 -1 roll -90 add 5 -1 roll -90 add arcn
mrestore} bind def
%%EndProcSet
%%BeginProcSet : A2
/A2 {msave 0 0 moveto A1 closepath mrestore} def
%%EndProcSet
%%BeginProcSet : BitMap
/BitMap {
 /buffer ^1 string def
 ^2 ^5 2 div add 792 ^3 sub ^6 2 div add translate
 ^4 57.3 mul rotate
  0 ^5 2 div sub 0 ^6 2 div sub translate
 ^5 ^6 scale
 ^5 ^6 ^7 [^5 0 0 -^6 0 ^6] {currentfile buffer readhexstring pop} image
}bind def 
%%EndProcSet 
%%BeginProcSet : note 
/note {
gsave pbox astore pop
0 792 translate 1 -1 scale CTM currentmatrix pop exch translate
pbox right get pbox left get sub 2 div
pbox bottom get pbox top get sub 2 div
translate 57.3 mul rotate setlinewidth
noteBody aload pop moveto
noteBody length 2 div 1 sub cvi{lineto}repeat
dogEar aload pop moveto
dogEar length 2 div 1 sub cvi{lineto}repeat
0.992 0.975 0.507 setrgbcolor gsave fill grestore
gsave newpath
stickem aload pop moveto
stickem length 2 div 1 sub cvi{lineto}repeat
0.760 0.760 0.760 setrgbcolor fill 
grestore
0 0 0 setrgbcolor stroke
noteShadow aload pop moveto
noteShadow length 2 div 1 sub cvi{lineto}repeat
dogEarShadow aload pop moveto
dogEarShadow length 2 div 1 sub cvi{lineto}repeat
0 0 0 setrgbcolor gsave stroke grestore fill
grestore
}bind def
%%EndProcSet 
%%BeginProcSet : RGB4toGray4
 /redTbl4   [0 0 1 1 1 1 2 2 3 3 3 4 4 4 5 5] def
 /greenTbl4 [0 1 1 2 2 3 3 4 4 5 6 6 7 7 7 8] def
 /blueTbl4  [0 0 0 0 1 1 1 1 1 1 1 1 1 2 2 2] def
 /RGB4toGray4 {
	currentfile RGBBuf readhexstring pop pop
	/i 0 def
	/j 0 def
	grayBuf length {
		RGBBuf i get dup
		-4 bitshift redTbl4 exch get
		exch 15 and greenTbl4 exch get add
		RGBBuf i 1 add  get dup
		-4 bitshift blueTbl4 exch get 3 -1 roll add  4 bitshift
		exch 15 and redTbl4 exch get
		RGBBuf i 2 add  get dup
		-4 bitshift greenTbl4 exch get 3 -1 roll add
		exch 15 and blueTbl4 exch get add or
		grayBuf j 3 -1 roll put
		/i i 3 add def
		/j j 1 add def
	} repeat
	grayBuf
} bind def
%%EndProcSet
%%BeginProcSet : RGB8toGray8
/RGB8toGray8 {
	currentfile RGBBuf readhexstring pop pop
	/i 0 def
	/j 0 def
	grayBuf length {
		RGBBuf i get 0.33 mul
		RGBBuf i 1 add get 0.55 mul add
		RGBBuf i 2 add get 0.12 mul add round cvi
		grayBuf j 3 -1 roll put
		/i i 3 add def
		/j j 1 add def
	} repeat
	grayBuf
} bind def
%%EndProcSet
%%BeginProcSet : RGB24toGray8
/RGB24toGray8 {RGB8toGray8} bind def
%%EndProcSet
%%BeginProcSet : RGB2toGray2
 /redTbl2   [0 0 1 1] def
 /greenTbl2 [0 1 1 2] def
 /blueTbl2  [0 0 0 0] def
 /RGB2toGray2 {
	currentfile RGBBuf readhexstring pop pop
	/i 0 def
	/j 0 def
	grayBuf length {
		RGBBuf i get dup dup dup
		-6 bitshift redTbl2 exch get
		exch -4 bitshift 3 and
		greenTbl2 exch get add
		exch -2 bitshift 3 and
		blueTbl2 exch get add
		6 bitshift exch 3 and
		redTbl2 exch get
		RGBBuf i 1 add  get dup dup dup
		-6 bitshift greenTbl2 exch get
		exch -4 bitshift 3 and
		blueTbl2 exch get add
		4 -1 roll add
		4 bitshift 4 -1 roll or
		3 1 roll -2 bitshift 3 and
		redTbl2 exch get exch 3 and
		greenTbl2 exch get add
		RGBBuf i 2 add  get dup dup dup
		-6 bitshift blueTbl2 exch get
		5 -1 roll add
		2 bitshift 5 -1 roll or
		4 1 roll -4 bitshift 3 and
		redTbl2 exch get
		exch -2 bitshift 3 and
		greenTbl2 exch get add
		exch 3 and
		greenTbl2 exch get add or
		grayBuf j 3 -1 roll put
		/i i 3 add def
		/j j 1 add def
	} repeat
	grayBuf
} bind def
%%EndProcSet
%%EndProcSet
%%BeginProcSet : RGB1toGray1
/RGB1toGray1 {
	currentfile RGBBuf readhexstring pop pop
	/i 0 def
	/j 0 def
	grayBuf length {
		RGBBuf i get dup dup
		1 bitshift 128 and exch
		3 bitshift 64 and or exch
		5 bitshift 32 and or
		RGBBuf i 1 add get dup
		-1 bitshift 16 and exch
		1 bitshift 8 and or or
		RGBBuf i 2 add get dup dup
		-5 bitshift 4 and exch
		-3 bitshift 2 and or exch
		-1 bitshift 1 and or or
		/i i 3 add def
		/j j 1 add def
	} repeat
	grayBuf
} bind def
%%EndProcSet
%%BeginProcSet : RGB16toGray8
/RGB16toGray8 {RGB8toGray8} bind def
%%EndProcSet
%%BeginProcSet : BW 
/ScalePoint {
	0 0
	4 -2 roll
	0 0 1 1
	8 4 roll GetBoxesRatio scale
} bind def
/PointDict 4 dict def
PointDict begin
/XPoint {
		-.5 .5 moveto
		.5 -.5 lineto
		.5 .5 moveto
		-.5 -.5 lineto
	} bind def
	/DiamondPoint {
		0.0 .5 moveto
		.5 0.0 lineto
		0.0 -0.5 lineto
		-.5 0.0 lineto
		closepath
	} bind def
	/PlusPoint {
		0.0 .5 moveto
		0.0 -.5 lineto
		-.5 0.0 moveto
		.5 0.0 lineto
	} bind def
	/SquarePoint {
		-.5 .5 moveto
		.5 .5 lineto
		.5 -.5 lineto
		-.5 -.5 lineto
		closepath
	} bind def
end
/DrawPoint {
	gsave
		[] 0 setdash
		0 setlinecap
		translate
		msave
			ScalePoint
			PointDict exch get exec
		mrestore
		1.0 setlinewidth stroke
	grestore
} bind def
%%EndProcSet 
%%BeginProcSet : Wall object Procs
%%EndProcSet
%%BeginProcSet : Subscriber 
/Subscriber { 
 msave 
 R PC PF LC SS newpath
 mrestore 
} bind def 
%%EndProcSet 
/StripFromFront { 
dup length
2 index sub
3 1 roll
exch 3 -1 roll
getinterval
} bind def
/MakePathArray { 
 /k 0 def 
 {/k k 1 add def pop pop}{/k k 1 add def pop pop}{/k k 1 add def pop pop pop pop pop pop}{/k k 1 add def }pathforall 
 k array
 /k 0 def 
 {{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{curveto} 7 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{closepath} 1 array astore 1 index k 3 -1 roll put /k k 1 add def} 
pathforall 
}bind def 
/MakeFlatPathArray { 
/k 0 def 
{/k k 1 add def pop pop}{/k k 1 add def pop pop}{pop pop pop pop pop pop}{}pathforall 
k array
/k 0 def 
{{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{ pop pop pop pop pop pop} 
{} 
pathforall 
}bind def 
/FractionalLine {
2 index sub
.00001 mul
exch
3 index sub
.00001 mul
4 -1 roll add
3 1 roll
add
} bind def
/calcLineLength {
 exch
 4 -1 roll
 sub
 dup mul
 3 1 roll exch
 sub
 dup mul
 add sqrt
} bind def
/InitTotalLineLength {
 /oldY exch def
 /oldX exch def
 theDash aload pop currentLineLength add setdash
} bind def
/AccumeLineLength {
 3 copy pop
 2 copy
 oldX oldY
 4 2 roll calcLineLength
 /segmentLength exch def
 /currentLineLength currentLineLength segmentLength add def
 /oldY exch def
 /oldX exch def
} bind def
/DecumeLastLineLength {
 /currentLineLength currentLineLength segmentLength sub def
} bind def
/DrawFlattendSegment {
 /pointCount 2 def
 dup 0 lt { pop 0 } if
 fpc
 3 1 roll
 2 index
 1 index
 gt {
 2 copy get
 dup length
 dup 3 eq {
 pop
 dup 0 get
 exch 1 get
 2 copy InitTotalLineLength  
 m
 } {
 } ifelse
 } {
 pop 1 index
 } ifelse
 dup 1 add
 3 index
 exch sub
 dup 10 gt { pop 10} if
 {
 1 add
 2 copy
 get aload pop
 AccumeLineLength
 exec
 } repeat
 3 1 roll pop pop
 DecumeLastLineLength
} bind def
/IncFPC {
 fpc add
 /fpc exch def
} bind def
/DrawFlatPathArray {
 fpc
 0 { 
 dup 2 index
 1 sub
 lt { 
 flatPathArray exch
 newpath
 1 sub DrawFlattendSegment
 gsave
 pathSegProc
 grestore
 newpath
 }
 {
 pop pop
 exit
 } ifelse
 } loop
} bind def
/RecordFirstSubSegment {
 closepathArray 0 pathArray 0 get
 put
 closepathArray 1
 pathArray 0 get aload pop pop
 pathArray 1 get dup length 3 eq {
 aload pop pop
 } {
 newpath
 0 0 moveto
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 segmentArray 1 get aload pop pop
 } ifelse
 FractionalLine {lineto} 3 array astore
 put
} bind def
/AppendClosePath {
 closepathArray 0 get 2 {lineto} put
 flatPathArray fpc closepathArray 0 get put
 1 IncFPC
 flatPathArray fpc closepathArray 1 get put
 1 IncFPC
} bind def
/RecordCurrentDash {
 /theDash
 currentdash 2 array astore def
 /currentLineLength 0 def
} bind def
/PatternStroke {
	0 setlinecap
 RecordCurrentDash
 /saveFlat currentflat def
 .5 setflat
 /pathArray MakePathArray def
 /closepathArray 2 array def
 /pathLength pathArray length def
 /flatPathArray 513 array def
 /currentLineLength 0 def
 /fpc 0 def
 pathArray pathLength 1 sub get
 length 1 eq {
 /usingClosepath true def
 RecordFirstSubSegment
 /pathLength pathLength 1 sub def
 } {
 /usingClosepath false def
 } ifelse
 0 1 pathLength 1 sub {
 pathArray exch get
 dup length 3 eq {
 fpc 1 add 512 ge {
 DrawFlatPathArray
 fpc 2 ge {
 flatPathArray flatPathArray fpc 2 sub get 0 put
 flatPathArray flatPathArray fpc 1 sub get 1 put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } if
 flatPathArray exch fpc exch put
 1 IncFPC
 } {
 dup length 7 eq {
 newpath
 /nToStrip 0 def
 fpc 1 gt {
 flatPathArray fpc 2 sub get aload pop pop m
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } {
 fpc 1 eq {
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } if
 } ifelse
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 /segmentArray nToStrip segmentArray StripFromFront def
 segmentArray length fpc add 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 segmentArray length 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 segmentArray length
 /exitLoop false def
 0 
 {
 2 copy sub
 dup 500 gt {
 pop 500
 } { 
 /exitLoop true def
 } ifelse 
 segmentArray 2 index 2 index getinterval
 flatPathArray fpc 3 -1 roll putinterval
 dup IncFPC
 add 
 exitLoop {
 exit 
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } ifelse
 } loop
 } ifelse
 } ifelse
 } if
 } ifelse
 } for
 fpc 0 gt {
 usingClosepath {
 AppendClosePath
 } if
 DrawFlatPathArray
 } if
 saveFlat setflat
} bind def
%%BeginProcSet : rampdelta
/rampdelta {
/len 0 3 -1 roll add def
/i2 0 3 -1 roll add def
/i1 0 3 -1 roll add def
/nRampSteps len cellPenW div cvi 1 add dup 512 gt {pop 512} if def
/rampPenW len nRampSteps div def
rampColors i1 get aload pop c1 astore pop
rampColors i2 get aload pop c2 astore pop
c2 0 get c1 0 get sub nRampSteps div d 0 3 -1 roll put
c2 1 get c1 1 get sub nRampSteps div d 1 3 -1 roll put
c2 2 get c1 2 get sub nRampSteps div d 2 3 -1 roll put
d aload pop
} bind def
%%EndProcSet
%%BeginProcSet : adddelta
/adddelta {
d astore pop
 mycurrentrgbcolor c1 copy pop
c1 0 get d 0 get add c2 0 3 -1 roll put
c1 1 get d 1 get add c2 1 3 -1 roll put
c1 2 get d 2 get add c2 2 3 -1 roll put
c2 aload pop setrgbcolor
c2 mycurrentrgbcolor copy pop
} bind def
%%EndProcSet
%%BeginProcSet : rampline
/rampline {
segbox ulx get rampPenW add segbox ulx 3 -1 roll put
segbox llx get rampPenW add segbox llx 3 -1 roll put
segbox ulx get segbox uly get moveto
segbox llx get segbox lly get lineto
delta aload pop adddelta stroke
}bind def
%%EndProcSet
%%BeginProcSet : slantrampseg
/slantrampseg {
gsave newpath
segbox ulx get segbox urx get sub abs
rampdelta delta astore pop
segbox ulx get rampPenW .5 mul sub segbox ulx 3 -1 roll put
segbox llx get rampPenW .5 mul sub segbox llx 3 -1 roll put
rampColors exch get aload mycurrentrgbcolor copy pop setrgbcolor
rampPenW setlinewidth nRampSteps {rampline} repeat
grestore
}bind def
%%EndProcSet
%%BeginProcSet : flipramp
/flipramp {
rampColors 0 get rampColors 3 get rampColors 0 3 -1 roll put rampColors 3 3 -1 roll put
rampColors 1 get rampColors 2 get rampColors 1 3 -1 roll put rampColors 2 3 -1 roll put
} bind def
%%EndProcSet
%%BeginProcSet : leftrbox
/leftrbox {
rbox segbox copy pop	
rbox urx get rbox ulx get sub
flipRatio mul dup 
segbox ulx get add segbox urx 3 -1 roll put
segbox llx get add segbox lrx 3 -1 roll put
} bind def
%%EndProcSet
%%BeginProcSet : rightrbox
/rightrbox {
rbox segbox copy pop	
rbox urx get rbox ulx get sub
flipRatio mul dup 
segbox ulx get add segbox ulx 3 -1 roll put
segbox llx get add segbox llx 3 -1 roll put
} bind def
%%EndProcSet
%%BeginProcSet : drawslantramp
/drawslantramp {
segbox urx get segbox ulx get sub 3 div dup dup dup dup dup dup dup dup dup
segbox ulx get add segbox urx 3 -1 roll put
segbox llx get add segbox lrx 3 -1 roll put
segbox aload pop
0 0 1 slantrampseg
segbox astore pop
segbox ulx get add segbox ulx 3 -1 roll put
segbox llx get add segbox llx 3 -1 roll put
segbox urx get add segbox urx 3 -1 roll put
segbox lrx get add segbox lrx 3 -1 roll put
segbox aload pop
1 1 2 slantrampseg
segbox astore pop
segbox ulx get add segbox ulx 3 -1 roll put
segbox llx get add segbox llx 3 -1 roll put
segbox urx get add segbox urx 3 -1 roll put
segbox lrx get add segbox lrx 3 -1 roll put
2 2 3 slantrampseg
}bind def
%%EndProcSet
%%BeginProcSet : tan
/tan {
dup sin exch cos div
}bind def
%%EndProcSet
%%BeginProcSet : rampbox
/rampbox {
pbox top get dup rbox uly 3 -1 roll put rbox ury 3 -1 roll put
pbox left get dup rbox ulx 3 -1 roll put rbox llx 3 -1 roll put
pbox bottom get dup rbox lly 3 -1 roll put rbox lry 3 -1 roll put
pbox right get dup rbox urx 3 -1 roll put rbox lrx 3 -1 roll put
}bind def
%%EndProcSet
%%BeginProcSet : rampbox
/LoadSegBox {
4 copy
segbox llx 6 -1 roll put
segbox lly 5 -1 roll put
segbox lrx 4 -1 roll put
segbox lry 6 -1 roll put
segbox urx 5 -1 roll put
segbox ury 3 -1 roll put
segbox ulx 4 -1 roll put
segbox uly 3 -1 roll put
} bind def
/TransToCenter {
gsave
flattenpath
pathbbox
grestore
2 index
sub 2.0 div exch
3 index sub 2.0 div
4 -1 roll add
3 1 roll add
translate
} bind def
/RotRampGrad {
gsave
TransToCenter
-1.0 mul 180.0 add rotate
flattenpath
pathbbox 
clip
newpath
LoadSegBox
flipRatio 1 lt dup{flipramp}if flipRatio 0 gt and
{
/flipRatio 1.0 flipRatio sub def
segbox rbox copy pop leftrbox drawslantramp flipramp rightrbox drawslantramp
}
{drawslantramp} ifelse
grestore
} bind def
/bbg {
pbox exch get
} bind def
%%BeginProcSet : DR
/DR {		% Directional ramp
/workingMatrix mstore def
objectCord setmatrix
flipramp
gsave
flattenpath pathbbox
grestore
pbox bottom 3 -1 roll put pbox right 3 -1 roll put pbox top 3 -1 roll put pbox left 3 -1 roll put
rampAngle RotRampGrad
RF
workingMatrix setmatrix
}bind def
%%EndProcSet
%%BeginProcSet : ramparc
/ramparc {
gsave
circum rampdelta delta astore pop
/rampPenW 60.0 nRampSteps div def
/ang1 exch rampAngle sub def 
/ang2 rampPenW ang1 add def 
rampColors exch get aload mycurrentrgbcolor copy pop setrgbcolor 1 setlinewidth
nRampSteps {ramparcseg}repeat
grestore
}bind def
%%EndProcSet
%%BeginProcSet : ramparcseg
/ramparcseg {
newpath
rampcenter aload pop moveto
rampcenter aload pop rampradius ang2 ang1 arcn fill
/ang1 ang2 def 
/ang2 ang2 rampPenW add def
delta aload pop adddelta
}bind def
%%EndProcSet
/GetRadius {
rbox urx get rbox llx get sub 2 div rampcenter 0 get abs add dup mul
rbox lly get rbox ury get sub 2 div rampcenter 1 get abs add dup mul
add sqrt
} bind def
%%BeginProcSet : circularRamp
/circularRamp {
rampbox
/rampradius GetRadius def
CalcCrcm
flipramp
0 0 0 1 ramparc
1 60 1 2 ramparc
2 120 2 3 ramparc
flipramp
0 180 0 1 ramparc
1 240 1 2 ramparc
2 300 2 3 ramparc
}bind def
%%EndProcSet
/GetCircumf {
2.0 mul 3.1415926 mul
} bind def
/CalcCrcm {
rampradius GetCircumf
/circum exch 6.0 div def
} bind def
%%BeginProcSet : CR
/CR {
gsave
clip
MTC currentmatrix pop
CTM setmatrix
flattenpath
pathbbox pbox bottom 3 -1 roll put pbox right 3 -1 roll put pbox top 3 -1 roll put pbox left 3 -1 roll put
pbox left get pbox right get sub abs 2 div 
pbox left get add rampcenter 0 get add rampcenter 0 3 -1 roll put
pbox top get pbox bottom get sub abs 2 div
pbox top get add rampcenter 1 get add rampcenter 1 3 -1 roll put
circularRamp
MTC setmatrix
grestore
RF
}bind def
%%EndProcSet
%%BeginProcSet : shaperamp
/SBR {
gsave
clip
/workingMatrix mstore def
objectCord setmatrix
flattenpath
/BaseBox pathbbox 4 array astore def
/len BaseBox 2 get BaseBox 0 get sub dup mul
BaseBox 3 get BaseBox 1 get sub dup mul
add sqrt
12.0 div
def
/EndBox
BaseBox aload pop
3 -1 roll sub
3 1 roll
exch sub
/dbx exch def
/dby exch def
BaseBox aload pop pop pop
/blly exch def
/bllx exch def
sbox 0 get 100.0 div dby mul blly add
sbox 1 get 100.0 div dbx mul bllx add
sbox 2 get 100.0 div dby mul blly add
sbox 3 get 100.0 div dbx mul bllx add
exch
4 -2 roll
exch
4 -2 roll
4 array astore
def
BaseBox EndBox ShapeBurst
workingMatrix setmatrix
grestore
} bind def
%%EndProcSet
/GetBoxCenter {
2 index
sub 2.0 div
3 -1 roll add
3 1 roll
1 index sub
2.0 div add
exch
} bind def
/GetInterBox {
/boxInter exch def
4 1 7 {
-1 roll
7 index
} for
sub boxInter mul
8 -1 roll add
7 1 roll
sub boxInter mul
7 -1 roll add
6 1 roll
sub boxInter mul
6 -1 roll add
5 1 roll
sub boxInter mul
5 -1 roll add
4 1 roll
} bind def
/GetBoxCenterDeltas {
GetBoxCenter
6 2 roll
GetBoxCenter
3 -1 roll exch sub
3 1 roll sub
exch
} bind def
/GetBoxCornerDeltas {
pop pop
4 2 roll pop pop
3 -1 roll sub
3 1 roll exch sub
exch
} bind def
%%BeginProcSet : getpath 
/getpath {
/k 0 def
{/k k 1 add def pop pop}{/k k 1 add def pop pop}{/k k 1 add def pop pop pop pop pop pop}{}pathforall
/pfa k array def
/k 0 def
{{moveto} 3 array astore pfa k 3 -1 roll put /k k 1 add def}
{{lineto} 3 array astore pfa k 3 -1 roll put /k k 1 add def}
{{curveto} 7 array astore pfa k 3 -1 roll put /k k 1 add def}
{}pathforall
}bind def
%%EndProcSet
/ShapeBurst {
getpath
newpath
/SBERect exch 4 array copy def
/SBBRect exch 4 array copy def
/interRect1 SBBRect aload pop SBERect aload pop .3333333 GetInterBox 4 array astore def
/interRect2 SBBRect aload pop SBERect aload pop .6666666 GetInterBox 4 array astore def
0 0 1 SBBRect interRect1 ShapeBurstSeg
msave
interRect1 0 get interRect1 1 get translate
SBBRect aload pop interRect1 aload pop GetBoxesRatio scale
SBBRect 0 get -1.0 mul SBBRect 1 get -1.0 mul translate
1 1 2 interRect1 interRect2 ShapeBurstSeg
mrestore
msave
interRect2 0 get interRect2 1 get translate
SBBRect aload pop interRect2 aload pop GetBoxesRatio scale
SBBRect 0 get -1.0 mul SBBRect 1 get -1.0 mul translate
2 2 3 interRect2 SBERect ShapeBurstSeg
mrestore
} bind def
/ShapeBurstSeg {
/sbr1 exch 4 array copy def
/sbr0 exch 4 array copy def
/blx sbr0 0 get def
/bly sbr0 1 get def
len rampdelta delta astore pop
sbr0 aload pop sbr1 aload pop GetBoxesRatio
/ratioY exch def
/ratioX exch def
sbr0 aload pop sbr1 aload pop GetBoxCornerDeltas
/dlly exch nRampSteps div def
/dllx exch nRampSteps div def
/scaleStepX 1.0 ratioX sub nRampSteps div def
/scaleStepY 1.0 ratioY sub nRampSteps div def
/currentScaleX 1.0 scaleStepX sub def
/currentScaleY 1.0 scaleStepY sub def
/translationX blx dllx add def
/translationY bly dlly add def
/currentScaleX 1.0  def
/currentScaleY 1.0  def
/translationX blx def
/translationY bly def
rampColors exch get aload mycurrentrgbcolor copy pop setrgbcolor
nRampSteps {
msave
translationX translationY translate
currentScaleX currentScaleY scale
blx -1.0 mul bly -1.0 mul translate
pfa {aload pop exec} forall fill
delta aload pop adddelta
/translationX translationX dllx add def
/translationY translationY dlly add def
/currentScaleX currentScaleX scaleStepX sub def
/currentScaleY currentScaleY scaleStepY sub def
mrestore
} repeat
msave
translationX translationY translate
currentScaleX currentScaleY scale
blx -1.0 mul bly -1.0 mul translate
pfa {aload pop exec} forall fill
mrestore
} bind def
%%EndProlog
initmsaverestore
/tctm matrix currentmatrix def
tctm RoundMatrix setmatrix
/patternMatrix mstore def
10 setmiterlimit
2 setlinecap
newpath
%
%tfBegGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 21.386 458.847 21.386 50.847 Line
%@EndLine
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 257.386 458.847 257.386 50.847 Line
%@EndLine
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 487.386 458.847 487.386 50.847 Line
%@EndLine
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 729.386 458.847 729.386 50.847 Line
%@EndLine
%
%tfEndGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 31.847 -0.613 0.000 0.000 11.000 37.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {0.500 0.500 0.500 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 33.847 20.386 0.000 0.000 5.000 12.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfEndGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 37.847 -1.613 0.000 0.000 8.000 40.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[5.000 0.000] CP
[36.000 0.000] CP
[40.000 7.000 ] CP
[40.000 8.000 ] CP
[0.000 8.000 ] CP
[0.000 7.000 ] CP
[5.000 0.000 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 39.847 0.386 0.000 0.000 5.000 27.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[4.000 0.000] CP
[26.000 0.000] CP
[27.000 5.000 ] CP
[0.000 5.000 ] CP
[4.000 0.000 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 39.847 28.386 0.000 0.000 5.000 8.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 0.000] CP
[5.000 0.000] CP
[8.000 5.000 ] CP
[1.000 5.000 ] CP
[0.000 0.000 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%
%tfEndGrp
%
%
%tfEndGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 8.847 4.386 0.000 0.000 22.000 27.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {0.000 0.304 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 10.847 6.386 0.000 0.000 18.000 23.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 10.847 26.386 0.000 0.000 18.000 3.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 11.847 27.386 0.000 0.000 0.000 1.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 19.847 27.386 0.000 0.000 1.000 1.000 rect
%@EndOval
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 23.847 27.386 0.000 0.000 0.000 1.000 rect
%@EndOval
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 26.847 27.386 0.000 0.000 0.000 1.000 rect
%@EndOval
%
%tfEndGrp
%
%
%tfEndGrp
%
%
%tfEndGrp
%
%
%tfEndGrp
%
%
%tfEndGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 0.999 0.799 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 -0.152 237.386 0.000 0.000 63.000 29.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 0.999 0.799 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 5.847 244.386 0.000 0.000 18.000 18.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PC {1.000 0.999 0.799 setrgbcolor } def
/PF {gsave fill grestore} def
1 0 23.347 260.886 0.000 0.000 40.000 2.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PC {1.000 0.999 0.799 setrgbcolor } def
/PF {gsave fill grestore} def
1 0 10.347 246.886 0.000 0.000 9.000 5.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PC {1.000 0.999 0.799 setrgbcolor } def
/PF {gsave fill grestore} def
1 0 5.347 248.886 0.000 0.000 18.000 1.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PC {1.000 0.999 0.799 setrgbcolor } def
/PF {gsave fill grestore} def
1 0 8.347 257.886 0.000 0.000 5.000 4.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PC {1.000 0.999 0.799 setrgbcolor } def
/PF {gsave fill grestore} def
1 0 15.347 257.886 0.000 0.000 5.000 4.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfEndGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 0.999 0.799 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 -0.152 477.386 0.000 0.000 63.000 29.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 0.999 0.799 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 5.847 484.386 0.000 0.000 18.000 18.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PC {1.000 0.999 0.799 setrgbcolor } def
/PF {gsave fill grestore} def
1 0 23.347 500.886 0.000 0.000 40.000 2.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PC {1.000 0.999 0.799 setrgbcolor } def
/PF {gsave fill grestore} def
1 0 10.347 486.886 0.000 0.000 9.000 5.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PC {1.000 0.999 0.799 setrgbcolor } def
/PF {gsave fill grestore} def
1 0 5.347 488.886 0.000 0.000 18.000 1.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PC {1.000 0.999 0.799 setrgbcolor } def
/PF {gsave fill grestore} def
1 0 8.347 497.886 0.000 0.000 5.000 4.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PC {1.000 0.999 0.799 setrgbcolor } def
/PF {gsave fill grestore} def
1 0 15.347 497.886 0.000 0.000 5.000 4.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfEndGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 31.847 707.386 0.000 0.000 11.000 37.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {0.500 0.500 0.500 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 33.847 728.386 0.000 0.000 5.000 12.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfEndGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 37.847 706.386 0.000 0.000 8.000 40.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[5.000 0.000] CP
[36.000 0.000] CP
[40.000 7.000 ] CP
[40.000 8.000 ] CP
[0.000 8.000 ] CP
[0.000 7.000 ] CP
[5.000 0.000 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 39.847 708.386 0.000 0.000 5.000 27.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[4.000 0.000] CP
[26.000 0.000] CP
[27.000 5.000 ] CP
[0.000 5.000 ] CP
[4.000 0.000 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 39.847 736.386 0.000 0.000 5.000 8.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 0.000] CP
[5.000 0.000] CP
[8.000 5.000 ] CP
[1.000 5.000 ] CP
[0.000 0.000 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%
%tfEndGrp
%
%
%tfEndGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 8.847 712.386 0.000 0.000 22.000 27.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {0.000 0.304 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 10.847 714.386 0.000 0.000 18.000 23.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 10.847 734.386 0.000 0.000 18.000 3.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 11.847 735.386 0.000 0.000 0.000 1.000 rect
%@EndRect
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 19.847 735.386 0.000 0.000 1.000 1.000 rect
%@EndOval
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 23.847 735.386 0.000 0.000 0.000 1.000 rect
%@EndOval
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 26.847 735.386 0.000 0.000 0.000 1.000 rect
%@EndOval
%
%tfEndGrp
%
%
%tfEndGrp
%
%
%tfEndGrp
%
%
%tfEndGrp
%
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginText
save
%%IncludeFont: Courier
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 18.347 44.886 0.000 0.000 23.000 90.000 rect
%@EndRect
gsave
89.886 29.847 T translate
0.0 rotate
1 1 scale
18.000 (Courier) plain F
0.000 0.000 0.000 setrgbcolor 
(S) -44.613 4.000 S
(e) -32.706 4.000 S
(n) -21.343 4.000 S
(d) -9.840 4.000 S
(e) 1.996 4.000 S
(r) 13.358 4.000 S
( ) 21.310 4.000 S
(A) 28.313 4.000 S
grestore
%@EndText
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginText
restore
save
%%IncludeFont: Courier
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 14.347 596.886 0.000 0.000 48.000 108.000 rect
%@EndRect
gsave
650.886 38.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) plain F
0.000 0.000 0.000 setrgbcolor 
(R) -53.613 -8.000 S
(e) -40.616 -8.000 S
(c) -27.619 -8.000 S
(e) -16.116 -8.000 S
(i) -3.119 -8.000 S
(v) 3.883 -8.000 S
(e) 16.880 -8.000 S
(r) 29.877 -8.000 S
( ) 39.877 -8.000 S
0.000 0.000 0.000 setrgbcolor 
(B) -53.613 10.000 S
grestore
%@EndText
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 255.386 80.847 21.386 80.847 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {} def
/PC {} def
1.000 0 76.847 240.386 0.000 0.000 8.000 15.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[15.000 4.000] CP
[0.000 0.000] CP
[0.000 8.000 ] CP
[15.000 4.000 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/LC {} def
/SS {pop} def
/PC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
1 0 76.347 239.886 0.000 0.000 8.000 15.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[15.000 4.000] CP
[0.000 0.000] CP
[0.000 8.000 ] CP
[15.000 4.000 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 56.347 32.886 0.000 0.000 24.000 178.000 rect
%@EndRect
gsave
121.886 68.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(1) -88.613 4.000 S
(.) -75.616 4.000 S
( ) -68.613 4.000 S
(p) -61.610 4.000 S
(a) -48.613 4.000 S
(t) -35.616 4.000 S
(h) -25.616 4.000 S
( ) -12.619 4.000 S
(m) -5.616 4.000 S
(e) 13.383 4.000 S
(s) 26.380 4.000 S
(s) 37.883 4.000 S
(a) 49.386 4.000 S
(g) 62.383 4.000 S
(e) 75.380 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 77.347 32.886 0.000 0.000 24.000 73.000 rect
%@EndRect
gsave
69.386 89.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(T) -35.613 4.000 S
(S) -25.613 4.000 S
(P) -14.110 4.000 S
(E) -1.113 4.000 S
(C) 10.389 4.000 S
(=) 23.386 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 99.347 32.886 0.000 0.000 24.000 259.000 rect
%@EndRect
gsave
162.386 111.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(2) -128.613 4.000 S
(K) -115.616 4.000 S
(,) -101.116 4.000 S
(1) -94.113 4.000 S
(0) -81.116 4.000 S
(M) -68.119 4.000 S
(b) -49.119 4.000 S
(/) -36.122 4.000 S
(s) -24.619 4.000 S
(,) -13.116 4.000 S
(5) -6.113 4.000 S
(1) 6.883 4.000 S
(2) 19.880 4.000 S
(k) 32.877 4.000 S
(b) 45.875 4.000 S
(/) 58.872 4.000 S
(s) 70.375 4.000 S
(,) 81.877 4.000 S
(3) 88.880 4.000 S
(2) 101.877 4.000 S
(K) 114.875 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 120.347 32.886 0.000 0.000 24.000 106.000 rect
%@EndRect
gsave
85.886 132.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(A) -52.613 4.000 S
(d) -39.616 4.000 S
(S) -26.619 4.000 S
(p) -15.116 4.000 S
(e) -2.119 4.000 S
(c) 10.877 4.000 S
(=) 22.380 4.000 S
(\() 35.377 4.000 S
(\)) 43.875 4.000 S
grestore
%@EndText
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 489.386 92.847 255.386 92.847 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {} def
/PC {} def
1.000 0 88.847 474.386 0.000 0.000 8.000 15.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[15.000 4.000] CP
[0.000 0.000] CP
[0.000 8.000 ] CP
[15.000 4.000 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/LC {} def
/SS {pop} def
/PC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
1 0 88.347 473.886 0.000 0.000 8.000 15.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[15.000 4.000] CP
[0.000 0.000] CP
[0.000 8.000 ] CP
[15.000 4.000 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 68.347 266.886 0.000 0.000 24.000 178.000 rect
%@EndRect
gsave
355.886 80.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(2) -88.613 4.000 S
(.) -75.616 4.000 S
( ) -68.613 4.000 S
(p) -61.610 4.000 S
(a) -48.613 4.000 S
(t) -35.616 4.000 S
(h) -25.616 4.000 S
( ) -12.619 4.000 S
(m) -5.616 4.000 S
(e) 13.383 4.000 S
(s) 26.380 4.000 S
(s) 37.883 4.000 S
(a) 49.386 4.000 S
(g) 62.383 4.000 S
(e) 75.380 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 89.347 266.886 0.000 0.000 24.000 154.000 rect
%@EndRect
gsave
343.886 101.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(S) -76.613 4.000 S
(e) -65.110 4.000 S
(n) -52.113 4.000 S
(d) -39.116 4.000 S
(e) -26.119 4.000 S
(r) -13.122 4.000 S
( ) -3.122 4.000 S
(T) 3.880 4.000 S
(S) 13.880 4.000 S
(P) 25.383 4.000 S
(E) 38.380 4.000 S
(C) 49.883 4.000 S
(=) 62.880 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 111.347 266.886 0.000 0.000 24.000 259.000 rect
%@EndRect
gsave
396.386 123.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(2) -128.613 4.000 S
(K) -115.616 4.000 S
(,) -101.116 4.000 S
(1) -94.113 4.000 S
(0) -81.116 4.000 S
(M) -68.119 4.000 S
(b) -49.119 4.000 S
(/) -36.122 4.000 S
(s) -24.619 4.000 S
(,) -13.116 4.000 S
(5) -6.113 4.000 S
(1) 6.883 4.000 S
(2) 19.880 4.000 S
(k) 32.877 4.000 S
(b) 45.875 4.000 S
(/) 58.872 4.000 S
(s) 70.375 4.000 S
(,) 81.877 4.000 S
(3) 88.880 4.000 S
(2) 101.877 4.000 S
(K) 114.875 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 132.347 266.886 0.000 0.000 24.000 250.000 rect
%@EndRect
gsave
391.886 144.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(A) -124.613 4.000 S
(d) -111.616 4.000 S
(S) -98.619 4.000 S
(p) -87.116 4.000 S
(e) -74.119 4.000 S
(c) -61.122 4.000 S
(=) -49.619 4.000 S
(\() -36.622 4.000 S
(1) -28.125 4.000 S
(0) -15.127 4.000 S
(.) -2.130 4.000 S
(2) 4.872 4.000 S
(k) 17.869 4.000 S
(b) 30.866 4.000 S
(,) 43.863 4.000 S
( ) 50.866 4.000 S
(0) 57.869 4.000 S
(.) 70.866 4.000 S
(0) 77.869 4.000 S
(5) 90.866 4.000 S
(s) 103.863 4.000 S
(\)) 115.366 4.000 S
grestore
%@EndText
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 723.386 104.847 489.386 104.847 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {} def
/PC {} def
1.000 0 100.847 708.386 0.000 0.000 8.000 15.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[15.000 4.000] CP
[0.000 0.000] CP
[0.000 8.000 ] CP
[15.000 4.000 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/LC {} def
/SS {pop} def
/PC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
1 0 100.347 707.886 0.000 0.000 8.000 15.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[15.000 4.000] CP
[0.000 0.000] CP
[0.000 8.000 ] CP
[15.000 4.000 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 80.347 500.886 0.000 0.000 24.000 178.000 rect
%@EndRect
gsave
589.886 92.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(3) -88.613 4.000 S
(.) -75.616 4.000 S
( ) -68.613 4.000 S
(p) -61.610 4.000 S
(a) -48.613 4.000 S
(t) -35.616 4.000 S
(h) -25.616 4.000 S
( ) -12.619 4.000 S
(m) -5.616 4.000 S
(e) 13.383 4.000 S
(s) 26.380 4.000 S
(s) 37.883 4.000 S
(a) 49.386 4.000 S
(g) 62.383 4.000 S
(e) 75.380 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 101.347 500.886 0.000 0.000 24.000 154.000 rect
%@EndRect
gsave
577.886 113.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(S) -76.613 4.000 S
(e) -65.110 4.000 S
(n) -52.113 4.000 S
(d) -39.116 4.000 S
(e) -26.119 4.000 S
(r) -13.122 4.000 S
( ) -3.122 4.000 S
(T) 3.880 4.000 S
(S) 13.880 4.000 S
(P) 25.383 4.000 S
(E) 38.380 4.000 S
(C) 49.883 4.000 S
(=) 62.880 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 123.347 500.886 0.000 0.000 24.000 259.000 rect
%@EndRect
gsave
630.386 135.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(2) -128.613 4.000 S
(K) -115.616 4.000 S
(,) -101.116 4.000 S
(1) -94.113 4.000 S
(0) -81.116 4.000 S
(M) -68.119 4.000 S
(b) -49.119 4.000 S
(/) -36.122 4.000 S
(s) -24.619 4.000 S
(,) -13.116 4.000 S
(5) -6.113 4.000 S
(1) 6.883 4.000 S
(2) 19.880 4.000 S
(k) 32.877 4.000 S
(b) 45.875 4.000 S
(/) 58.872 4.000 S
(s) 70.375 4.000 S
(,) 81.877 4.000 S
(3) 88.880 4.000 S
(2) 101.877 4.000 S
(K) 114.875 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 144.347 500.886 0.000 0.000 24.000 199.000 rect
%@EndRect
gsave
600.386 156.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(A) -98.613 4.000 S
(d) -85.616 4.000 S
(S) -72.619 4.000 S
(p) -61.116 4.000 S
(e) -48.119 4.000 S
(c) -35.122 4.000 S
(=) -23.619 4.000 S
(\() -10.622 4.000 S
(5) -2.125 4.000 S
(1) 10.872 4.000 S
(.) 23.869 4.000 S
(2) 30.872 4.000 S
(,) 43.869 4.000 S
( ) 50.872 4.000 S
(0) 57.875 4.000 S
(.) 70.872 4.000 S
(1) 77.875 4.000 S
(\)) 90.872 4.000 S
grestore
%@EndText
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PC {0.800 0.800 0.800 setrgbcolor } def
/PF {gsave fill grestore} def
1 0 204.347 422.886 0.000 0.000 73.000 382.000 rect
%@EndRect
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 206.347 461.886 0.000 0.000 24.000 326.000 rect
%@EndRect
gsave
624.886 218.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(4) -162.613 4.000 S
(.) -149.616 4.000 S
( ) -142.613 4.000 S
(B) -135.610 4.000 S
( ) -122.613 4.000 S
(r) -115.610 4.000 S
(e) -105.610 4.000 S
(q) -92.613 4.000 S
(u) -79.616 4.000 S
(e) -66.619 4.000 S
(s) -53.622 4.000 S
(t) -42.119 4.000 S
(s) -32.119 4.000 S
( ) -20.616 4.000 S
(g) -13.613 4.000 S
(u) -0.616 4.000 S
(a) 12.380 4.000 S
(r) 25.377 4.000 S
(a) 35.377 4.000 S
(n) 48.375 4.000 S
(t) 61.372 4.000 S
(e) 71.372 4.000 S
(e) 84.369 4.000 S
(d) 97.366 4.000 S
( ) 110.363 4.000 S
(Q) 117.366 4.000 S
(o) 130.363 4.000 S
(S) 143.360 4.000 S
( ) 154.863 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 227.347 439.886 0.000 0.000 24.000 363.000 rect
%@EndRect
gsave
621.386 239.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(r) -180.613 4.000 S
(e) -170.613 4.000 S
(s) -157.616 4.000 S
(e) -146.113 4.000 S
(r) -133.116 4.000 S
(v) -123.116 4.000 S
(a) -110.119 4.000 S
(t) -97.122 4.000 S
(i) -87.122 4.000 S
(o) -80.119 4.000 S
(n) -67.122 4.000 S
( ) -54.125 4.000 S
(w) -47.122 4.000 S
(i) -28.122 4.000 S
(t) -21.119 4.000 S
(h) -11.119 4.000 S
( ) 1.877 4.000 S
(d) 8.880 4.000 S
(e) 21.877 4.000 S
(l) 34.875 4.000 S
(a) 41.877 4.000 S
(y) 54.875 4.000 S
( ) 67.872 4.000 S
(v) 74.875 4.000 S
(a) 87.872 4.000 S
(r) 100.869 4.000 S
(i) 110.869 4.000 S
(a) 117.872 4.000 S
(t) 130.869 4.000 S
(i) 140.869 4.000 S
(o) 147.872 4.000 S
(n) 160.869 4.000 S
( ) 173.866 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 249.347 461.886 0.000 0.000 24.000 305.000 rect
%@EndRect
gsave
614.386 261.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(0) -151.613 4.000 S
(.) -138.616 4.000 S
(6) -131.613 4.000 S
(s) -118.616 4.000 S
(;) -107.113 4.000 S
( ) -100.110 4.000 S
( ) -93.107 4.000 S
( ) -86.104 4.000 S
( ) -79.101 4.000 S
(B) -72.098 4.000 S
( ) -59.101 4.000 S
(r) -52.098 4.000 S
(e) -42.098 4.000 S
(s) -29.101 4.000 S
(e) -17.598 4.000 S
(r) -4.601 4.000 S
(v) 5.398 4.000 S
(e) 18.395 4.000 S
(s) 31.392 4.000 S
( ) 42.895 4.000 S
(6) 49.898 4.000 S
(2) 62.895 4.000 S
(2) 75.892 4.000 S
( ) 88.889 4.000 S
(k) 95.892 4.000 S
(b) 108.889 4.000 S
(/) 121.886 4.000 S
(s) 133.389 4.000 S
( ) 144.892 4.000 S
grestore
%@EndText
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 723.386 332.847 489.386 332.847 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {} def
/PC {} def
1.000 0 328.847 489.386 0.000 0.000 8.000 15.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 4.000] CP
[15.000 8.000] CP
[15.000 0.000 ] CP
[0.000 4.000 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/LC {} def
/SS {pop} def
/PC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
1 0 328.347 488.886 0.000 0.000 8.000 15.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 4.000] CP
[15.000 8.000] CP
[15.000 0.000 ] CP
[0.000 4.000 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 308.347 500.886 0.000 0.000 24.000 177.000 rect
%@EndRect
gsave
589.386 320.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(5) -87.613 4.000 S
(.) -74.616 4.000 S
( ) -67.613 4.000 S
(r) -60.610 4.000 S
(e) -50.610 4.000 S
(s) -37.613 4.000 S
(v) -26.110 4.000 S
( ) -13.113 4.000 S
(m) -6.110 4.000 S
(e) 12.889 4.000 S
(s) 25.886 4.000 S
(s) 37.389 4.000 S
(a) 48.892 4.000 S
(g) 61.889 4.000 S
(e) 74.886 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 329.347 500.886 0.000 0.000 24.000 174.000 rect
%@EndRect
gsave
587.886 341.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(R) -86.613 4.000 S
(e) -73.616 4.000 S
(c) -60.619 4.000 S
(e) -49.116 4.000 S
(i) -36.119 4.000 S
(v) -29.116 4.000 S
(e) -16.119 4.000 S
(r) -3.122 4.000 S
( ) 6.877 4.000 S
(T) 13.880 4.000 S
(S) 23.880 4.000 S
(P) 35.383 4.000 S
(E) 48.380 4.000 S
(C) 59.883 4.000 S
(=) 72.880 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 351.347 500.886 0.000 0.000 24.000 259.000 rect
%@EndRect
gsave
630.386 363.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(2) -128.613 4.000 S
(K) -115.616 4.000 S
(,) -101.116 4.000 S
(1) -94.113 4.000 S
(0) -81.116 4.000 S
(M) -68.119 4.000 S
(b) -49.119 4.000 S
(/) -36.122 4.000 S
(s) -24.619 4.000 S
(,) -13.116 4.000 S
(5) -6.113 4.000 S
(1) 6.883 4.000 S
(2) 19.880 4.000 S
(k) 32.877 4.000 S
(b) 45.875 4.000 S
(/) 58.872 4.000 S
(s) 70.375 4.000 S
(,) 81.877 4.000 S
(2) 88.880 4.000 S
(4) 101.877 4.000 S
(K) 114.875 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 372.347 500.886 0.000 0.000 24.000 207.000 rect
%@EndRect
gsave
604.386 384.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(R) -102.613 4.000 S
(-) -89.616 4.000 S
(S) -78.113 4.000 S
(P) -66.610 4.000 S
(E) -53.613 4.000 S
(C) -42.110 4.000 S
( ) -29.113 4.000 S
(=) -22.110 4.000 S
(\() -9.113 4.000 S
(6) -0.616 4.000 S
(2) 12.380 4.000 S
(2) 25.377 4.000 S
( ) 38.375 4.000 S
(k) 45.377 4.000 S
(b) 58.375 4.000 S
(/) 71.372 4.000 S
(s) 82.875 4.000 S
(\)) 94.377 4.000 S
grestore
%@EndText
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 489.386 344.847 255.386 344.847 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {} def
/PC {} def
1.000 0 340.847 255.386 0.000 0.000 8.000 15.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 4.000] CP
[15.000 8.000] CP
[15.000 0.000 ] CP
[0.000 4.000 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/LC {} def
/SS {pop} def
/PC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
1 0 340.347 254.886 0.000 0.000 8.000 15.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 4.000] CP
[15.000 8.000] CP
[15.000 0.000 ] CP
[0.000 4.000 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 320.347 266.886 0.000 0.000 24.000 177.000 rect
%@EndRect
gsave
355.386 332.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(6) -87.613 4.000 S
(.) -74.616 4.000 S
( ) -67.613 4.000 S
(r) -60.610 4.000 S
(e) -50.610 4.000 S
(s) -37.613 4.000 S
(v) -26.110 4.000 S
( ) -13.113 4.000 S
(m) -6.110 4.000 S
(e) 12.889 4.000 S
(s) 25.886 4.000 S
(s) 37.389 4.000 S
(a) 48.892 4.000 S
(g) 61.889 4.000 S
(e) 74.886 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 341.347 266.886 0.000 0.000 24.000 174.000 rect
%@EndRect
gsave
353.886 353.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(R) -86.613 4.000 S
(e) -73.616 4.000 S
(c) -60.619 4.000 S
(e) -49.116 4.000 S
(i) -36.119 4.000 S
(v) -29.116 4.000 S
(e) -16.119 4.000 S
(r) -3.122 4.000 S
( ) 6.877 4.000 S
(T) 13.880 4.000 S
(S) 23.880 4.000 S
(P) 35.383 4.000 S
(E) 48.380 4.000 S
(C) 59.883 4.000 S
(=) 72.880 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 363.347 266.886 0.000 0.000 24.000 259.000 rect
%@EndRect
gsave
396.386 375.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(2) -128.613 4.000 S
(K) -115.616 4.000 S
(,) -101.116 4.000 S
(1) -94.113 4.000 S
(0) -81.116 4.000 S
(M) -68.119 4.000 S
(b) -49.119 4.000 S
(/) -36.122 4.000 S
(s) -24.619 4.000 S
(,) -13.116 4.000 S
(5) -6.113 4.000 S
(1) 6.883 4.000 S
(2) 19.880 4.000 S
(k) 32.877 4.000 S
(b) 45.875 4.000 S
(/) 58.872 4.000 S
(s) 70.375 4.000 S
(,) 81.877 4.000 S
(2) 88.880 4.000 S
(4) 101.877 4.000 S
(K) 114.875 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 384.347 266.886 0.000 0.000 24.000 207.000 rect
%@EndRect
gsave
370.386 396.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(R) -102.613 4.000 S
(-) -89.616 4.000 S
(S) -78.113 4.000 S
(P) -66.610 4.000 S
(E) -53.613 4.000 S
(C) -42.110 4.000 S
( ) -29.113 4.000 S
(=) -22.110 4.000 S
(\() -9.113 4.000 S
(6) -0.616 4.000 S
(2) 12.380 4.000 S
(2) 25.377 4.000 S
( ) 38.375 4.000 S
(k) 45.377 4.000 S
(b) 58.375 4.000 S
(/) 71.372 4.000 S
(s) 82.875 4.000 S
(\)) 94.377 4.000 S
grestore
%@EndText
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 255.386 356.847 21.386 356.847 Line
%@EndLine
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {} def
/PC {} def
1.000 0 352.847 21.386 0.000 0.000 8.000 15.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 4.000] CP
[15.000 8.000] CP
[15.000 0.000 ] CP
[0.000 4.000 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/LC {} def
/SS {pop} def
/PC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
1 0 352.347 20.886 0.000 0.000 8.000 15.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 4.000] CP
[15.000 8.000] CP
[15.000 0.000 ] CP
[0.000 4.000 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 332.347 32.886 0.000 0.000 24.000 177.000 rect
%@EndRect
gsave
121.386 344.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(7) -87.613 4.000 S
(.) -74.616 4.000 S
( ) -67.613 4.000 S
(r) -60.610 4.000 S
(e) -50.610 4.000 S
(s) -37.613 4.000 S
(v) -26.110 4.000 S
( ) -13.113 4.000 S
(m) -6.110 4.000 S
(e) 12.889 4.000 S
(s) 25.886 4.000 S
(s) 37.389 4.000 S
(a) 48.892 4.000 S
(g) 61.889 4.000 S
(e) 74.886 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 353.347 32.886 0.000 0.000 24.000 174.000 rect
%@EndRect
gsave
119.886 365.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(R) -86.613 4.000 S
(e) -73.616 4.000 S
(c) -60.619 4.000 S
(e) -49.116 4.000 S
(i) -36.119 4.000 S
(v) -29.116 4.000 S
(e) -16.119 4.000 S
(r) -3.122 4.000 S
( ) 6.877 4.000 S
(T) 13.880 4.000 S
(S) 23.880 4.000 S
(P) 35.383 4.000 S
(E) 48.380 4.000 S
(C) 59.883 4.000 S
(=) 72.880 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 375.347 32.886 0.000 0.000 24.000 259.000 rect
%@EndRect
gsave
162.386 387.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(2) -128.613 4.000 S
(K) -115.616 4.000 S
(,) -101.116 4.000 S
(1) -94.113 4.000 S
(0) -81.116 4.000 S
(M) -68.119 4.000 S
(b) -49.119 4.000 S
(/) -36.122 4.000 S
(s) -24.619 4.000 S
(,) -13.116 4.000 S
(5) -6.113 4.000 S
(1) 6.883 4.000 S
(2) 19.880 4.000 S
(k) 32.877 4.000 S
(b) 45.875 4.000 S
(/) 58.872 4.000 S
(s) 70.375 4.000 S
(,) 81.877 4.000 S
(2) 88.880 4.000 S
(4) 101.877 4.000 S
(K) 114.875 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 396.347 32.886 0.000 0.000 24.000 207.000 rect
%@EndRect
gsave
136.386 408.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(R) -102.613 4.000 S
(-) -89.616 4.000 S
(S) -78.113 4.000 S
(P) -66.610 4.000 S
(E) -53.613 4.000 S
(C) -42.110 4.000 S
( ) -29.113 4.000 S
(=) -22.110 4.000 S
(\() -9.113 4.000 S
(6) -0.616 4.000 S
(2) 12.380 4.000 S
(2) 25.377 4.000 S
( ) 38.375 4.000 S
(k) 45.377 4.000 S
(b) 58.375 4.000 S
(/) 71.372 4.000 S
(s) 82.875 4.000 S
(\)) 94.377 4.000 S
grestore
%@EndText
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 32.347 452.886 0.000 0.000 24.000 27.000 rect
%@EndRect
gsave
466.386 44.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(R) -12.613 4.000 S
(2) 0.383 4.000 S
grestore
%@EndText
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginText
%@BeginRuler
%@  2.8346456692913384320e+0 viewScale
%@  3.5277777777777780120e-1 realScale
%@ 10 realDivs
%@ 0404 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 32.347 206.886 0.000 0.000 24.000 27.000 rect
%@EndRect
gsave
220.386 44.347 T translate
0.0 rotate
1 1 scale
18.000 (Courier) fess
0.000 0.000 0.000 setrgbcolor 
(R) -12.613 4.000 S
(1) 0.383 4.000 S
grestore
%@EndText
%
%tfEndGrp
%
%
%tfEndGrp
%
%
%tfEndGrp
%
restore
%%Trailer
end
